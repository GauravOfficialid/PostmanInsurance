{
	"info": {
		"_postman_id": "3445fa69-d6c6-4db7-85e4-408d867525cd",
		"name": "Files",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "21246027"
	},
	"item": [
		{
			"name": "Agency Mailbox",
			"item": [
				{
					"name": "File Contents",
					"item": [
						{
							"name": "GET return 200ok for File index one",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body is as expected\", () => {\r",
											"    let res = pm.response.json()\r",
											"    \r",
											"    pm.expect(res).to.have.property(\"id\")\r",
											"    pm.expect(res).to.have.property(\"index\")\r",
											"    pm.expect(res).to.have.property(\"contentCode\")\r",
											"    pm.expect(res).to.have.property(\"description\")    \r",
											"    pm.expect(res).to.have.property(\"policyNumber\")\r",
											"    pm.expect(res).to.have.property(\"claimNumber\")\r",
											"    pm.expect(res).to.have.property(\"claimType\")\r",
											"    pm.expect(res).to.have.property(\"broadLob\")\r",
											"    pm.expect(res).to.have.property(\"lob\")\r",
											"    pm.expect(res).to.have.property(\"cycle\")\r",
											"    pm.expect(res).to.have.property(\"naic\")\r",
											"    pm.expect(res).to.have.property(\"producerCode\")\r",
											"    pm.expect(res).to.have.property(\"insuredName\")\r",
											"    pm.expect(res).to.have.property(\"effectiveDate\")\r",
											"    pm.expect(res).to.have.property(\"expirationDate\")\r",
											"    pm.expect(res).to.have.property(\"transactionEffectiveDate\")\r",
											"    pm.expect(res).to.have.property(\"transactionResponseDate\")\r",
											"    pm.expect(res).to.have.property(\"lossDate\")\r",
											"    pm.expect(res).to.have.property(\"transactionType\")\r",
											"   })"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fileIDwithitems}}/items/01"
							},
							"response": []
						},
						{
							"name": "GET return 200ok for File contents",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fileIDwithitems}}/items"
							},
							"response": []
						},
						{
							"name": "GET return 204Ok for Empty Zip",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files/{{emptyZipfile}}/items/01",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files",
										"{{emptyZipfile}}",
										"items",
										"01"
									],
									"query": [
										{
											"key": "decompressFile",
											"value": "false",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET return 401 Ok for fake Id ( non existing )",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fakeFileID}}/items"
							},
							"response": []
						},
						{
							"name": "return 401 UnAuthorized for File Id I don't have access toFile Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{YDUXHFileID}}"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"agencyMailboxyx50vnv\");",
									"const Pass = pm.globals.get(\"agencyMailboxPassword\");",
									"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"agencyMailboxToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('agencyMailboxToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "File Get Metadata by Id",
					"item": [
						{
							"name": "Get 404 Not found fake Id (In correct ID)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fakeFileId}}/metadata"
							},
							"response": []
						},
						{
							"name": "Get 200OK  return Zip metadata",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{zipFileId}}/metadata"
							},
							"response": []
						},
						{
							"name": "Get 200OK  return edoc metadata",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{edocFileid}}/metadata"
							},
							"response": []
						},
						{
							"name": "Get 401 Unauthorized for file on other account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");\r",
											"const User = pm.environment.get(\"agencyAdmin\");\r",
											"const Pass = pm.environment.get(\"agencyPassword\");\r",
											"const BasicToken = pm.environment.get(\"agencyTokenClient\");\r",
											"const Scope = pm.environment.get(\"allScope\")\r",
											"const postRequest = {\r",
											"  url: URL,\r",
											"  method: 'POST',\r",
											"  timeout: 10,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",\r",
											"    \"Authorization\": \"Basic \" + BasicToken\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: User},\r",
											"        {key:\"Password\", value: Pass},\r",
											"        {key:\"scope\", value: Scope}\r",
											"    ]}\r",
											"};\r",
											"pm.environment.unset(\"agencyAdminToken\");\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('agencyAdminToken', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{YDUXHFileID}}/metadata"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"agencyMailboxyx50vnv\");",
									"const Pass = pm.globals.get(\"agencyMailboxPassword\");",
									"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"agencyMailboxToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('agencyMailboxToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "File History",
					"item": [
						{
							"name": "Get 401 returns Unauthorized file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{unAuthorizedFile}}/history"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"agencyMailboxyx50vnv\");",
									"const Pass = pm.globals.get(\"agencyMailboxPassword\");",
									"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"agencyMailboxToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('agencyMailboxToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files Get by ID",
					"item": [
						{
							"name": "GET 200 OKreturns.edoc file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{edocFileid}}"
							},
							"response": []
						},
						{
							"name": "GET 200 OKreturns.Zip file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files/{{zipFileId}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files",
										"{{zipFileId}}"
									],
									"query": [
										{
											"key": "decompressFile",
											"value": "true",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 200 OKreturns.Zip file decompressed is true",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files/{{zipFileId}}?decompressFile=true",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files",
										"{{zipFileId}}"
									],
									"query": [
										{
											"key": "decompressFile",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 400 returns Bad Request due to invalid type for decompressFile boolean",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files/{{zipFileId}}?decompressFile=1",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files",
										"{{zipFileId}}"
									],
									"query": [
										{
											"key": "decompressFile",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 404 return Not Found to non-existent id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files/{{wrongFileId}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files",
										"{{wrongFileId}}"
									],
									"query": [
										{
											"key": "decompressFile",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"agencyMailboxyx50vnv\");",
									"const Pass = pm.globals.get(\"agencyMailboxPassword\");",
									"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"agencyMailboxToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('agencyMailboxToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files Metadata",
					"item": [
						{
							"name": "Get 500 returns API Error dur to invalid status code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statuscode=random%C2%A7%CE%A6#gh",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{agencyAccount}}"
										},
										{
											"key": "userId",
											"value": "{{agencyMailbox}}"
										},
										{
											"key": "statuscode",
											"value": "random%C2%A7%CE%A6"
										}
									],
									"hash": "gh"
								}
							},
							"response": []
						},
						{
							"name": "Get 400 returns API Error dur to empty status code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account={{agencyAccount}}&userId={{agencyEmptyMailbox}}&statuscode=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{agencyAccount}}"
										},
										{
											"key": "userId",
											"value": "{{agencyEmptyMailbox}}"
										},
										{
											"key": "statuscode",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 400 return bad request  to empty class code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account=null&userId=null&classcode=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "null"
										},
										{
											"key": "userId",
											"value": "null"
										},
										{
											"key": "classcode",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get  400 returns Bad Request due to empty page int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account=null&userId=null&page=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "null"
										},
										{
											"key": "userId",
											"value": "null"
										},
										{
											"key": "page",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 400 returns Bad Request due to empty pagesize int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account=null&userId=null&pagesize=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "null"
										},
										{
											"key": "userId",
											"value": "null"
										},
										{
											"key": "pagesize",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"agencyMailboxyx50vnv\");",
									"const Pass = pm.globals.get(\"agencyMailboxPassword\");",
									"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"agencyMailboxToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('agencyMailboxToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files V2 Metadata",
					"item": [
						{
							"name": "Get 200ok V2 gets one record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.test(\"Record-Count\", function () {\r",
											"    pm.response.to.have.header(\"Record-Count\");\r",
											"});\r",
											"\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v2/files?account={{agencyAccount}}&userId={{agencyMailboxOneFile}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v2",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{agencyAccount}}"
										},
										{
											"key": "userId",
											"value": "{{agencyMailboxOneFile}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 200ok V2 has Next and Last Headers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.test(\"Next is present\", function () {\r",
											"    pm.response.to.have.header(\"Next\");\r",
											"});\r",
											"pm.test(\"Last is present\", function () {\r",
											"    pm.response.to.have.header(\"Last\");\r",
											"});\r",
											"pm.test(\"Record-Count is present\", function () {\r",
											"    pm.response.to.have.header(\"Record-Count\");\r",
											"});\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Length is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Length\");\r",
											"});\r",
											"\r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v2/files?account={{agencyAccount}}&userId={{agencyMailbox}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v2",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{agencyAccount}}"
										},
										{
											"key": "userId",
											"value": "{{agencyMailbox}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 200ok V2 has prev and First headers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"   \r",
											"});\r",
											"pm.test(\"Last is present\", function () {\r",
											"    pm.response.to.have.header(\"Prev\");\r",
											"});\r",
											"pm.test(\"Record-Count is present\", function () {\r",
											"    pm.response.to.have.header(\"Record-Count\");\r",
											"});\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Length is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Length\");\r",
											"});\r",
											"pm.test(\"First is present\", function () {\r",
											"    pm.response.to.have.header(\"First\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v2/files?account={{agencyAccount}}&userId={{agencyMailbox}}&page=2",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v2",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{agencyAccount}}"
										},
										{
											"key": "userId",
											"value": "{{agencyMailbox}}"
										},
										{
											"key": "page",
											"value": "2"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"agencyMailboxyx50vnv\");",
									"const Pass = pm.globals.get(\"agencyMailboxPassword\");",
									"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"agencyMailboxToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('agencyMailboxToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files V3 Metadata",
					"item": [
						{
							"name": "One Param",
							"item": [
								{
									"name": "Get 204 Class Code not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&classCode=CLMDWN\"",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "classCode",
													"value": "CLMDWN\""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200OK class code- file returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&classCode=AIDOWN",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "classCode",
													"value": "AIDOWN"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok direction -Inbond returns file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    pm.test(\"response size is not eaqual to null\", function () {\r",
													"    pm.expect(pm.response.responseSize).not.eq(0);\r",
													"});\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&direction=inbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "direction",
													"value": "inbound"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204ok direction -Outbond",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.test(\"Status code is 204\", function () {\r",
													"//     pm.response.to.have.status(204);\r",
													"    \r",
													"// });\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&direction=outbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "direction",
													"value": "outbound"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 filterAccount",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&filterAccount={{carrierAccount}}",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "filterAccount",
													"value": "{{carrierAccount}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 filterUserId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&filterUserId={{carrierMailbox}}",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "filterUserId",
													"value": "{{carrierMailbox}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204 ok for fake status code",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=random%C2%A7%CE%A6",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "random%C2%A7%CE%A6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Start date 204 for date after files",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&startDate=11-14-2023",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "startDate",
													"value": "11-14-2023"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get stop date 204 for date before files",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&stopDate=05-1-2001",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "stopDate",
													"value": "05-1-2001"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok Stop date- file returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&stopDate=05-1-2022",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "stopDate",
													"value": "05-1-2022"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Start date 200- files returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&startDate=11-10-2022",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "startDate",
													"value": "11-10-2022"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Acknowledged or A",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=A",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Auto -acknowledged or T",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=T",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "T"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Available or V",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=V",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "V"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Canceled or C",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=C",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "C"
												},
												{
													"key": null,
													"value": "1f70e807-22a0-4084-bf51-742b7e162226",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Hold or H",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=H",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "H"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Incomplete or I",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.test(\"Status code is 200\", function () {\r",
													"//     pm.response.to.have.status(204);\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=I",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "I"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Received or R",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=R",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "R"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Send or S",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=S",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "S"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");",
											"const User = pm.globals.get(\"agencyMailboxyx50vnv\");",
											"const Pass = pm.globals.get(\"agencyMailboxPassword\");",
											"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
											"const Scope = pm.globals.get(\"allScope\")",
											"const postRequest = {",
											"  url: URL,",
											"  method: 'POST',",
											"  timeout: 10,",
											"  header: {",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
											"    \"Authorization\": \"Basic \" + BasicToken",
											"  },",
											"  body: {",
											"    mode: 'urlencoded',",
											"    urlencoded: [",
											"        {key: \"grant_type\", value: \"password\"},",
											"        {key:\"username\", value: User},",
											"        {key:\"Password\", value: Pass},",
											"        {key:\"scope\", value: Scope}",
											"    ]}",
											"};",
											"pm.environment.unset(\"agencyMailboxToken\");",
											"pm.sendRequest(postRequest, function (err, res) {",
											"    var responseJson = res.json();",
											"    console.log(responseJson);",
											"    pm.environment.set('agencyMailboxToken', responseJson['access_token']);",
											"});"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Two Params",
							"item": [
								{
									"name": "Get start and stop date-  return 400 for bad dates",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&startDate=2019-06-01&stopDate=2018-06-01",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "startDate",
													"value": "2019-06-01"
												},
												{
													"key": "stopDate",
													"value": "2018-06-01"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204 Status code -Canceled or C & direction inbound",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=C&direction=inbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "C"
												},
												{
													"key": "direction",
													"value": "inbound"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok Two Status Codes",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=T&statusCode=X",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "T"
												},
												{
													"key": "statusCode",
													"value": "X"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200OK Start and Stop date- file returns",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&startDate=11-1-2022&stopDate=11-11-2022",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "startDate",
													"value": "11-1-2022"
												},
												{
													"key": "stopDate",
													"value": "11-11-2022"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");",
											"const User = pm.globals.get(\"agencyMailboxyx50vnv\");",
											"const Pass = pm.globals.get(\"agencyMailboxPassword\");",
											"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
											"const Scope = pm.globals.get(\"allScope\")",
											"const postRequest = {",
											"  url: URL,",
											"  method: 'POST',",
											"  timeout: 10,",
											"  header: {",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
											"    \"Authorization\": \"Basic \" + BasicToken",
											"  },",
											"  body: {",
											"    mode: 'urlencoded',",
											"    urlencoded: [",
											"        {key: \"grant_type\", value: \"password\"},",
											"        {key:\"username\", value: User},",
											"        {key:\"Password\", value: Pass},",
											"        {key:\"scope\", value: Scope}",
											"    ]}",
											"};",
											"pm.environment.unset(\"agencyMailboxToken\");",
											"pm.sendRequest(postRequest, function (err, res) {",
											"    var responseJson = res.json();",
											"    console.log(responseJson);",
											"    pm.environment.set('agencyMailboxToken', responseJson['access_token']);",
											"});"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Get 400 returns Bad Request due to empty pagesize int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account=null&userId=null&pagesize=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "null"
										},
										{
											"key": "userId",
											"value": "null"
										},
										{
											"key": "pagesize",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 204Ok returns No content due to no files",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyEmptyMailbox}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{agencyAccount}}"
										},
										{
											"key": "userId",
											"value": "{{agencyEmptyMailbox}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get  400 returns Bad Request due to empty page int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account=&userId=&page=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": ""
										},
										{
											"key": "userId",
											"value": ""
										},
										{
											"key": "page",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 401 returns Unauthorized for agency mailbox",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account=yduxh&userId=yx66xu6",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "yduxh"
										},
										{
											"key": "userId",
											"value": "yx66xu6"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"agencyMailboxyx50vnv\");",
									"const Pass = pm.globals.get(\"agencyMailboxPassword\");",
									"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"agencyMailboxToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('agencyMailboxToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Agency System User",
			"item": [
				{
					"name": "File Contents",
					"item": [
						{
							"name": "GET return 200ok for File index one",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fileIDwithitems}}/items/01"
							},
							"response": []
						},
						{
							"name": "GET return 200ok for File contents",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fileIDwithitems}}/items"
							},
							"response": []
						},
						{
							"name": "GET return 204Ok for Empty Zip",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files/{{emptyZipfile}}/items/01",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files",
										"{{emptyZipfile}}",
										"items",
										"01"
									],
									"query": [
										{
											"key": "decompressFile",
											"value": "false",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET return 404Ok for fake Id ( non existing )",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fakeFileID}}/items"
							},
							"response": []
						},
						{
							"name": "return 401 UnAuthorized for File Id I don't have access toFile Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");\r",
											"const User = pm.environment.get(\"agencyAdmin\");\r",
											"const Pass = pm.environment.get(\"agencyPassword\");\r",
											"const BasicToken = pm.environment.get(\"agencyTokenClient\");\r",
											"const Scope = pm.environment.get(\"allScope\")\r",
											"const postRequest = {\r",
											"  url: URL,\r",
											"  method: 'POST',\r",
											"  timeout: 10,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",\r",
											"    \"Authorization\": \"Basic \" + BasicToken\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: User},\r",
											"        {key:\"Password\", value: Pass},\r",
											"        {key:\"scope\", value: Scope}\r",
											"    ]}\r",
											"};\r",
											"pm.environment.unset(\"agencyAdminToken\");\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('agencyAdminToken', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{YDUXHFileID}}"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"agencySysUser\");",
									"const Pass = pm.globals.get(\"agencyPassword\");",
									"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"agencySysUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('agencySysUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "File Get Metadata by Id",
					"item": [
						{
							"name": "Get 404 Not found fake Id (In correct ID)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fakeFileId}}/metadata"
							},
							"response": []
						},
						{
							"name": "Get 200OK  return Zip metadata",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{zipFileId}}/metadata"
							},
							"response": []
						},
						{
							"name": "Get 200OK  return edoc metadata",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{edocFileid}}/metadata"
							},
							"response": []
						},
						{
							"name": "Get 401 Unauthorized for file on other account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{YDUXHFileID}}/metadata"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"agencySysUser\");",
									"const Pass = pm.globals.get(\"agencyPassword\");",
									"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"agencySysUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('agencySysUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "File History",
					"item": [
						{
							"name": "Get 403 returns for fake id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fakeFileId}}/history"
							},
							"response": []
						},
						{
							"name": "Get 403 returns Unauthorized file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{unAuthorizedFile}}/history"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"agencySysUser\");",
									"const Pass = pm.globals.get(\"agencyPassword\");",
									"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"agencySysUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('agencySysUserToken', responseJson['access_token']);",
									"    });"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "File Send",
					"item": [
						{
							"name": "Post 401 returns Unauthorized due to user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}",
										"type": "text"
									},
									{
										"key": "content-type",
										"value": "multipart/form-data",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-IVANS-File-Metadata",
										"value": "{\"originalName\":\"QA_dbcd\",\"remoteName\":\"QA_dbcd\",\"sendAccount\":\"{{carrierAccount}}\",\"sendUserId\":\"{{carrierMailbox}}\",\"receiveAccount\":\"yduxh\",\"receiveUserId\":\"yx66xu6\",\"ClassCode\":\"{{dbcd}}\"}",
										"type": "text"
									},
									{
										"key": "content-type",
										"value": "text/plain",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "",
											"type": "file",
											"src": "DBCS/QA_dbcd.zip"
										}
									]
								},
								"url": {
									"raw": "{{reqUrl}}/api/files?type=media",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "type",
											"value": "media"
										}
									]
								},
								"description": "Send a file using files api. This example sends a file from carrier HIG1 to agency Y1234 (mailbox associated on oh-dev-34)"
							},
							"response": []
						},
						{
							"name": "Put 400 returns Bad Request due to file already received",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{changeFileStatus}}/Received",
								"description": "Send a file using files api. This example sends a file from carrier HIG1 to agency Y1234 (mailbox associated on oh-dev-34)"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"agencySysUser\");",
									"const Pass = pm.globals.get(\"agencyPassword\");",
									"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"agencySysUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('agencySysUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files Get by ID",
					"item": [
						{
							"name": "GET 200 OKreturns.edoc file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{edocFileid}}"
							},
							"response": []
						},
						{
							"name": "GET 200 OKreturns.Zip file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files/{{zipFileId}}?decompressFile=true",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files",
										"{{zipFileId}}"
									],
									"query": [
										{
											"key": "decompressFile",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 400 returns Bad Request due to invalid type for decompressFile boolean",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files/{{zipFileId}}?decompressFile=1",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files",
										"{{zipFileId}}"
									],
									"query": [
										{
											"key": "decompressFile",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 404 return Not Found to non-existent id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files/{{wrongFileId}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files",
										"{{wrongFileId}}"
									],
									"query": [
										{
											"key": "decompressFile",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"agencySysUser\");",
									"const Pass = pm.globals.get(\"agencyPassword\");",
									"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"agencySysUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('agencySysUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files Metadata",
					"item": [
						{
							"name": "Get 204Ok returns No content due to no files",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account={{agencyAccount}}&userId={{agencyEmptyMailbox}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{agencyAccount}}"
										},
										{
											"key": "userId",
											"value": "{{agencyEmptyMailbox}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 500 returns API Error dur to invalid status code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account={{agencyAccount}}&userId={{agencyMailboxOneFile}}&statuscode=random%C2%A7%CE%A6",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{agencyAccount}}"
										},
										{
											"key": "userId",
											"value": "{{agencyMailboxOneFile}}"
										},
										{
											"key": "statuscode",
											"value": "random%C2%A7%CE%A6"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 400 return bad request  to empty class code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account=null&userId=null&classcode=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "null"
										},
										{
											"key": "userId",
											"value": "null"
										},
										{
											"key": "classcode",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get  400 returns Bad Request due to empty page int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account=null&userId=null&page=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "null"
										},
										{
											"key": "userId",
											"value": "null"
										},
										{
											"key": "page",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 400 returns Bad Request due to empty pagesize int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account=null&userId=null&pagesize=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "null"
										},
										{
											"key": "userId",
											"value": "null"
										},
										{
											"key": "pagesize",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"agencySysUser\");",
									"const Pass = pm.globals.get(\"agencyPassword\");",
									"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"agencySysUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('agencySysUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files V2 Metadata",
					"item": [
						{
							"name": "Get 200ok V2 gets one record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.test(\"Record-Count\", function () {\r",
											"    pm.response.to.have.header(\"Record-Count\");\r",
											"});\r",
											"\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v2/files?account={{agencyAccount}}&userId={{agencyMailboxOneFile}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v2",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{agencyAccount}}"
										},
										{
											"key": "userId",
											"value": "{{agencyMailboxOneFile}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 200ok V2 has Next and Last Headers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.test(\"Next is present\", function () {\r",
											"    pm.response.to.have.header(\"Next\");\r",
											"});\r",
											"pm.test(\"Last is present\", function () {\r",
											"    pm.response.to.have.header(\"Last\");\r",
											"});\r",
											"pm.test(\"Record-Count is present\", function () {\r",
											"    pm.response.to.have.header(\"Record-Count\");\r",
											"});\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Length is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Length\");\r",
											"});\r",
											"\r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v2/files?account={{agencyAccount}}&userId={{agencyMailbox}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v2",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{agencyAccount}}"
										},
										{
											"key": "userId",
											"value": "{{agencyMailbox}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 200ok V2 has prev and First headers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"   \r",
											"});\r",
											"pm.test(\"Last is present\", function () {\r",
											"    pm.response.to.have.header(\"Prev\");\r",
											"});\r",
											"pm.test(\"Record-Count is present\", function () {\r",
											"    pm.response.to.have.header(\"Record-Count\");\r",
											"});\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Length is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Length\");\r",
											"});\r",
											"pm.test(\"First is present\", function () {\r",
											"    pm.response.to.have.header(\"First\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v2/files?account={{agencyAccount}}&userId={{agencyMailbox}}&page=2",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v2",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{agencyAccount}}"
										},
										{
											"key": "userId",
											"value": "{{agencyMailbox}}"
										},
										{
											"key": "page",
											"value": "2"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"agencySysUser\");",
									"const Pass = pm.globals.get(\"agencyPassword\");",
									"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"agencySysUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('agencySysUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files V3 Metadata",
					"item": [
						{
							"name": "One Param",
							"item": [
								{
									"name": "Get 204 Class Code not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencySysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&classCode=CLMDWN\"",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "classCode",
													"value": "CLMDWN\""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200OK class code- file returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencySysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&classCode=AIDOWN",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "classCode",
													"value": "AIDOWN"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok direction -Inbond returns file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    pm.test(\"response size is not eaqual to null\", function () {\r",
													"    pm.expect(pm.response.responseSize).not.eq(0);\r",
													"});\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencySysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&direction=inbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "direction",
													"value": "inbound"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204ok direction -Outbond",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.test(\"Status code is 204\", function () {\r",
													"//     pm.response.to.have.status(204);\r",
													"    \r",
													"// });\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencySysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&direction=outbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "direction",
													"value": "outbound"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 filterAccount",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencySysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&filterAccount={{carrierAccount}}",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "filterAccount",
													"value": "{{carrierAccount}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 filterUserId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencySysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&filterUserId={{carrierMailbox}}",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "filterUserId",
													"value": "{{carrierMailbox}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204 ok for fake status code",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencySysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=random%C2%A7%CE%A6",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "random%C2%A7%CE%A6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Start date 204 for date after files",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencySysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&startDate=11-14-2023",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "startDate",
													"value": "11-14-2023"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get stop date 204 for date before files",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencySysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&stopDate=05-1-2001",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "stopDate",
													"value": "05-1-2001"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok Stop date- file returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencySysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&stopDate=05-1-2022",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "stopDate",
													"value": "05-1-2022"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Start date 200- files returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencySysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&startDate=11-10-2022",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "startDate",
													"value": "11-10-2022"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Acknowledged or A",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencySysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=A",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Auto -acknowledged or T",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencySysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=T",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "T"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Available or V",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencySysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=V",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "V"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Canceled or C",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencySysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=C",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "C"
												},
												{
													"key": null,
													"value": "1f70e807-22a0-4084-bf51-742b7e162226",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Hold or H",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencySysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=H",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "H"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Incomplete or I",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.test(\"Status code is 200\", function () {\r",
													"//     pm.response.to.have.status(200);\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencySysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=I",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "I"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Received or R",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencySysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=R",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "R"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Send or S",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencySysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=S",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "S"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");",
											"const User = pm.globals.get(\"agencySysUser\");",
											"const Pass = pm.globals.get(\"agencyPassword\");",
											"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
											"const Scope = pm.globals.get(\"allScope\")",
											"const postRequest = {",
											"  url: URL,",
											"  method: 'POST',",
											"  timeout: 10,",
											"  header: {",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
											"    \"Authorization\": \"Basic \" + BasicToken",
											"  },",
											"  body: {",
											"    mode: 'urlencoded',",
											"    urlencoded: [",
											"        {key: \"grant_type\", value: \"password\"},",
											"        {key:\"username\", value: User},",
											"        {key:\"Password\", value: Pass},",
											"        {key:\"scope\", value: Scope}",
											"    ]}",
											"};",
											"pm.environment.unset(\"agencySysUserToken\");",
											"pm.sendRequest(postRequest, function (err, res) {",
											"    var responseJson = res.json();",
											"    console.log(responseJson);",
											"    pm.environment.set('agencySysUserToken', responseJson['access_token']);",
											"});"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Two Params",
							"item": [
								{
									"name": "Get start and stop date-  return 400 for bad dates",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencySysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&startDate=2019-06-01&stopDate=2018-06-01",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "startDate",
													"value": "2019-06-01"
												},
												{
													"key": "stopDate",
													"value": "2018-06-01"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204 Status code -Canceled or C & direction inbound",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencySysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=C&direction=inbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "C"
												},
												{
													"key": "direction",
													"value": "inbound"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok Two Status Codes",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencySysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=T&statusCode=X",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "T"
												},
												{
													"key": "statusCode",
													"value": "X"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200OK Start and Stop date- file returns",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencySysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&startDate=11-1-2022&stopDate=11-11-2022",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "startDate",
													"value": "11-1-2022"
												},
												{
													"key": "stopDate",
													"value": "11-11-2022"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");",
											"const User = pm.globals.get(\"agencySysUser\");",
											"const Pass = pm.globals.get(\"agencyPassword\");",
											"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
											"const Scope = pm.globals.get(\"allScope\")",
											"const postRequest = {",
											"  url: URL,",
											"  method: 'POST',",
											"  timeout: 10,",
											"  header: {",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
											"    \"Authorization\": \"Basic \" + BasicToken",
											"  },",
											"  body: {",
											"    mode: 'urlencoded',",
											"    urlencoded: [",
											"        {key: \"grant_type\", value: \"password\"},",
											"        {key:\"username\", value: User},",
											"        {key:\"Password\", value: Pass},",
											"        {key:\"scope\", value: Scope}",
											"    ]}",
											"};",
											"pm.environment.unset(\"agencySysUserToken\");",
											"pm.sendRequest(postRequest, function (err, res) {",
											"    var responseJson = res.json();",
											"    console.log(responseJson);",
											"    pm.environment.set('agencySysUserToken', responseJson['access_token']);",
											"});"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Get 400 returns Bad Request due to empty pagesize int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account=null&userId=null&pagesize=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "null"
										},
										{
											"key": "userId",
											"value": "null"
										},
										{
											"key": "pagesize",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 204Ok returns No content due to no files",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyEmptymailbox}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{agencyAccount}}"
										},
										{
											"key": "userId",
											"value": "{{agencyEmptymailbox}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get  400 returns Bad Request due to empty page int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account=&userId=&page=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": ""
										},
										{
											"key": "userId",
											"value": ""
										},
										{
											"key": "page",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 401 returns Unauthorized for agency mailbox",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account=yduxh&userId=yx66xu6",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "yduxh"
										},
										{
											"key": "userId",
											"value": "yx66xu6"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"agencySysUser\");",
									"const Pass = pm.globals.get(\"agencyPassword\");",
									"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"agencySysUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('agencySysUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Agency User",
			"item": [
				{
					"name": "File Contents",
					"item": [
						{
							"name": "GET return 200ok for File index one",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyUserToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fileIDwithitems}}/items/01"
							},
							"response": []
						},
						{
							"name": "GET return 200ok for File contents",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyUserToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fileIDwithitems}}/items"
							},
							"response": []
						},
						{
							"name": "GET return 204Ok for Empty Zip",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyUserToken}}"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files/{{emptyZipfile}}/items/01",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files",
										"{{emptyZipfile}}",
										"items",
										"01"
									],
									"query": [
										{
											"key": "decompressFile",
											"value": "false",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET return 401Ok for fake Id ( non existing )",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyUserToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fakeFileID}}/items"
							},
							"response": []
						},
						{
							"name": "return 401 UnAuthorized for File Id I don't have access toFile Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");\r",
											"const User = pm.environment.get(\"agencyAdmin\");\r",
											"const Pass = pm.environment.get(\"agencyPassword\");\r",
											"const BasicToken = pm.environment.get(\"agencyTokenClient\");\r",
											"const Scope = pm.environment.get(\"allScope\")\r",
											"const postRequest = {\r",
											"  url: URL,\r",
											"  method: 'POST',\r",
											"  timeout: 10,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",\r",
											"    \"Authorization\": \"Basic \" + BasicToken\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: User},\r",
											"        {key:\"Password\", value: Pass},\r",
											"        {key:\"scope\", value: Scope}\r",
											"    ]}\r",
											"};\r",
											"pm.environment.unset(\"agencyAdminToken\");\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('agencyAdminToken', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyUserToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{YDUXHFileID}}"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"agencyUser\");",
									"const Pass = pm.globals.get(\"agencyPassword\");",
									"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"agencyUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('agencyUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "File Get Metadata by Id",
					"item": [
						{
							"name": "Get 404 Not found fake Id (In correct ID)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyUserToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fakeFileId}}/metadata"
							},
							"response": []
						},
						{
							"name": "Get 200OK  return Zip metadata",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyUserToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{zipFileId}}/metadata"
							},
							"response": []
						},
						{
							"name": "Get 200OK  return edoc metadata",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyUserToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{edocFileid}}/metadata"
							},
							"response": []
						},
						{
							"name": "Get 401 Unauthorized for file on other account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");\r",
											"const User = pm.environment.get(\"agencyAdmin\");\r",
											"const Pass = pm.environment.get(\"agencyPassword\");\r",
											"const BasicToken = pm.environment.get(\"agencyTokenClient\");\r",
											"const Scope = pm.environment.get(\"allScope\")\r",
											"const postRequest = {\r",
											"  url: URL,\r",
											"  method: 'POST',\r",
											"  timeout: 10,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",\r",
											"    \"Authorization\": \"Basic \" + BasicToken\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: User},\r",
											"        {key:\"Password\", value: Pass},\r",
											"        {key:\"scope\", value: Scope}\r",
											"    ]}\r",
											"};\r",
											"pm.environment.unset(\"agencyAdminToken\");\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('agencyAdminToken', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyUserToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{YDUXHFileID}}/metadata"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"agencyUser\");",
									"const Pass = pm.globals.get(\"agencyPassword\");",
									"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"agencyUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('agencyUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "File History",
					"item": [
						{
							"name": "Get 403 returns for fake id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fakeFileId}}/history"
							},
							"response": []
						},
						{
							"name": "Get 403 returns Unauthorized file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{unAuthorizedFile}}/history"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"agencyUser\");",
									"const Pass = pm.globals.get(\"agencyPassword\");",
									"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"agencyUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('agencyUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files Metadata",
					"item": [
						{
							"name": "GET 401 return",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account={{agencyAccount}}&userId={{onefile}}/metadata",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{agencyAccount}}"
										},
										{
											"key": "userId",
											"value": "{{onefile}}/metadata"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"agencyUser\");",
									"const Pass = pm.globals.get(\"agencyPassword\");",
									"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"agencyUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('agencyUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files V3 Metadata",
					"item": [
						{
							"name": "One Param",
							"item": [
								{
									"name": "Get 204 Class Code not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&classCode=CLMDWN\"",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "classCode",
													"value": "CLMDWN\""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200OK class code- file returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&classCode=AIDOWN",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "classCode",
													"value": "AIDOWN"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok direction -Inbond returns file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    pm.test(\"response size is not eaqual to null\", function () {\r",
													"    pm.expect(pm.response.responseSize).not.eq(0);\r",
													"});\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&direction=inbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "direction",
													"value": "inbound"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204ok direction -Outbond",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.test(\"Status code is 204\", function () {\r",
													"//     pm.response.to.have.status(204);\r",
													"    \r",
													"// // });\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&direction=outbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "direction",
													"value": "outbound"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 filterAccount",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&filterAccount={{carrierAccount}}",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "filterAccount",
													"value": "{{carrierAccount}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 filterUserId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&filterUserId={{carrierMailbox}}",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "filterUserId",
													"value": "{{carrierMailbox}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204 ok for fake status code",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=random%C2%A7%CE%A6",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "random%C2%A7%CE%A6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Start date 204 for date after files",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&startDate=11-14-2023",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "startDate",
													"value": "11-14-2023"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get stop date 204 for date before files",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&stopDate=05-1-2001",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "stopDate",
													"value": "05-1-2001"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok Stop date- file returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&stopDate=05-1-2022",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "stopDate",
													"value": "05-1-2022"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Start date 200- files returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&startDate=11-10-2022",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "startDate",
													"value": "11-10-2022"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Acknowledged or A",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=A",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Auto -acknowledged or T",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=T",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "T"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Available or V",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=V",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "V"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Canceled or C",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=C",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "C"
												},
												{
													"key": null,
													"value": "1f70e807-22a0-4084-bf51-742b7e162226",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Hold or H",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=H",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "H"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Incomplete or I",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.test(\"Status code is 200\", function () {\r",
													"//     pm.response.to.have.status(200);\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=I",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "I"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Received or R",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=R",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "R"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Send or S",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=S",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "S"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");",
											"const User = pm.globals.get(\"agencyUser\");",
											"const Pass = pm.globals.get(\"agencyPassword\");",
											"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
											"const Scope = pm.globals.get(\"allScope\")",
											"const postRequest = {",
											"  url: URL,",
											"  method: 'POST',",
											"  timeout: 10,",
											"  header: {",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
											"    \"Authorization\": \"Basic \" + BasicToken",
											"  },",
											"  body: {",
											"    mode: 'urlencoded',",
											"    urlencoded: [",
											"        {key: \"grant_type\", value: \"password\"},",
											"        {key:\"username\", value: User},",
											"        {key:\"Password\", value: Pass},",
											"        {key:\"scope\", value: Scope}",
											"    ]}",
											"};",
											"pm.environment.unset(\"agencyUserToken\");",
											"pm.sendRequest(postRequest, function (err, res) {",
											"    var responseJson = res.json();",
											"    console.log(responseJson);",
											"    pm.environment.set('agencyUserToken', responseJson['access_token']);",
											"});"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Two Params",
							"item": [
								{
									"name": "Get start and stop date-  return 400 for bad dates",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&startDate=2019-06-01&stopDate=2018-06-01",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "startDate",
													"value": "2019-06-01"
												},
												{
													"key": "stopDate",
													"value": "2018-06-01"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204 Status code -Canceled or C & direction inbound",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=C&direction=inbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "C"
												},
												{
													"key": "direction",
													"value": "inbound"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok Two Status Codes",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=T&statusCode=X",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "T"
												},
												{
													"key": "statusCode",
													"value": "X"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200OK Start and Stop date- file returns",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{agencyUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&startDate=11-1-2022&stopDate=11-11-2022",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "startDate",
													"value": "11-1-2022"
												},
												{
													"key": "stopDate",
													"value": "11-11-2022"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");",
											"const User = pm.globals.get(\"agencyUser\");",
											"const Pass = pm.globals.get(\"agencyPassword\");",
											"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
											"const Scope = pm.globals.get(\"allScope\")",
											"const postRequest = {",
											"  url: URL,",
											"  method: 'POST',",
											"  timeout: 10,",
											"  header: {",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
											"    \"Authorization\": \"Basic \" + BasicToken",
											"  },",
											"  body: {",
											"    mode: 'urlencoded',",
											"    urlencoded: [",
											"        {key: \"grant_type\", value: \"password\"},",
											"        {key:\"username\", value: User},",
											"        {key:\"Password\", value: Pass},",
											"        {key:\"scope\", value: Scope}",
											"    ]}",
											"};",
											"pm.environment.unset(\"agencyUserToken\");",
											"pm.sendRequest(postRequest, function (err, res) {",
											"    var responseJson = res.json();",
											"    console.log(responseJson);",
											"    pm.environment.set('agencyUserToken', responseJson['access_token']);",
											"});"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Get 400 returns Bad Request due to empty pagesize int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account=null&userId=null&pagesize=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "null"
										},
										{
											"key": "userId",
											"value": "null"
										},
										{
											"key": "pagesize",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 204Ok returns No content due to no files",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyEmptymailbox}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{agencyAccount}}"
										},
										{
											"key": "userId",
											"value": "{{agencyEmptymailbox}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get  400 returns Bad Request due to empty page int",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account=&userId=&page=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": ""
										},
										{
											"key": "userId",
											"value": ""
										},
										{
											"key": "page",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 401 returns Unauthorized for agency mailbox",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account=yduxh&userId=yx66xu6",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "yduxh"
										},
										{
											"key": "userId",
											"value": "yx66xu6"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"agencyUser\");",
									"const Pass = pm.globals.get(\"agencyPassword\");",
									"const BasicToken = pm.environment.get(\"agencyTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"agencyUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('agencyUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Carrier Mailbox",
			"item": [
				{
					"name": "File Contents",
					"item": [
						{
							"name": "Get 200OK for File Contents",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierMailboxToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fileIDwithitems}}/items"
							},
							"response": []
						},
						{
							"name": "Get 200OK for File index one",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierMailboxToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fileIDwithitems}}/items/01"
							},
							"response": []
						},
						{
							"name": "Get 204OK for Empty Zip file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierMailboxToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{emptyZipfile}}/items"
							},
							"response": []
						},
						{
							"name": "Get 401 for file on another account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierMailboxToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{unAuthorizedFile}}/items"
							},
							"response": []
						},
						{
							"name": "Get 401 for fake ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierMailboxToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fakeFileID}}/items"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"carrierMailboxAutomation\");",
									"const Pass = pm.globals.get(\"carrierMailboxAutomationPassword\");",
									"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"carrierMailboxToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('carrierMailboxToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "File Get Metadata by Id",
					"item": [
						{
							"name": "Get 404 Not found fake Id (In correct ID)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierMailboxToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fakeFileId}}/metadata"
							},
							"response": []
						},
						{
							"name": "Get 200OK  return Zip metadata",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierMailboxToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{zipFileId}}/metadata"
							},
							"response": []
						},
						{
							"name": "Get 200OK  return edoc metadata",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierMailboxToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{edocFileid}}/metadata"
							},
							"response": []
						},
						{
							"name": "Get 401 Unauthorized for file on other account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");\r",
											"const User = pm.environment.get(\"agencyAdmin\");\r",
											"const Pass = pm.environment.get(\"agencyPassword\");\r",
											"const BasicToken = pm.environment.get(\"agencyTokenClient\");\r",
											"const Scope = pm.environment.get(\"allScope\")\r",
											"const postRequest = {\r",
											"  url: URL,\r",
											"  method: 'POST',\r",
											"  timeout: 10,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",\r",
											"    \"Authorization\": \"Basic \" + BasicToken\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: User},\r",
											"        {key:\"Password\", value: Pass},\r",
											"        {key:\"scope\", value: Scope}\r",
											"    ]}\r",
											"};\r",
											"pm.environment.unset(\"agencyAdminToken\");\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('agencyAdminToken', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierMailboxToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{unAuthorizedFile}}/metadata"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"carrierMailboxAutomation\");",
									"const Pass = pm.globals.get(\"carrierMailboxAutomationPassword\");",
									"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"carrierMailboxToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('carrierMailboxToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "File History",
					"item": [
						{
							"name": "Get 404 returns for fake id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierMailboxToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fakeFileId}}/history"
							},
							"response": []
						},
						{
							"name": "Get 401 returns Unauthorized file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files/{{unAuthorizedFile}}/history",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files",
										"{{unAuthorizedFile}}",
										"history"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"carrierMailboxAutomation\");",
									"const Pass = pm.globals.get(\"carrierMailboxAutomationPassword\");",
									"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"carrierMailboxToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('carrierMailboxToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files Get by ID",
					"item": [
						{
							"name": "GET 400 returns Bad Request due to invalid type for decompressFile boolean",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files/{{zipFileId}}?decompressFile=1",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files",
										"{{zipFileId}}"
									],
									"query": [
										{
											"key": "decompressFile",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 404 return Not Found to non-existent id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files/{{wrongFileId}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files",
										"{{wrongFileId}}"
									],
									"query": [
										{
											"key": "decompressFile",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 401 returns unauthorized for carrier",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierMailboxToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{unAuthorizedFile}}"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"carrierMailboxAutomation\");",
									"const Pass = pm.globals.get(\"carrierMailboxAutomationPassword\");",
									"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"carrierMailboxToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('carrierMailboxToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files Metadata",
					"item": [
						{
							"name": "Get 500 returns API Error dur to invalid status code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account={{carrierAccount}}&userId={{carrierEmptyMailbox}}&statuscode=asdf!@#gh",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{carrierAccount}}"
										},
										{
											"key": "userId",
											"value": "{{carrierEmptyMailbox}}"
										},
										{
											"key": "statuscode",
											"value": "asdf!@"
										}
									],
									"hash": "gh"
								}
							},
							"response": []
						},
						{
							"name": "Get 400 return bad request  to empty class code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account=null&userId=null&classcode=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "null"
										},
										{
											"key": "userId",
											"value": "null"
										},
										{
											"key": "classcode",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get  400 returns Bad Request due to empty page int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account=null&userId=null&page=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "null"
										},
										{
											"key": "userId",
											"value": "null"
										},
										{
											"key": "page",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 400 returns Bad Request due to empty pagesize int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account=null&userId=null&pagesize=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "null"
										},
										{
											"key": "userId",
											"value": "null"
										},
										{
											"key": "pagesize",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"carrierMailboxAutomation\");",
									"const Pass = pm.globals.get(\"carrierMailboxAutomationPassword\");",
									"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"carrierMailboxToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('carrierMailboxToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files V3 Metadata",
					"item": [
						{
							"name": "Two Params",
							"item": [
								{
									"name": "Get start and stop date-  return 400 for bad dates",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierMailbox}}&userId={{carrierMailbox}}&startDate=2019-06-01&stopDate=2018-06-01",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "startDate",
													"value": "2019-06-01"
												},
												{
													"key": "stopDate",
													"value": "2018-06-01"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204 Status code -Canceled or C & direction inbound",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&statusCode=C&direction=inbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "C"
												},
												{
													"key": "direction",
													"value": "inbound"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok Two Status Codes",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierV3Mailbox}}&statusCode=T&statusCode=X",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierV3Mailbox}}"
												},
												{
													"key": "statusCode",
													"value": "T"
												},
												{
													"key": "statusCode",
													"value": "X"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200OK Start and Stop date- file returns",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierV3Mailbox}}&startDate=1-1-2023&stopDate=9-3-2023",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierV3Mailbox}}"
												},
												{
													"key": "startDate",
													"value": "1-1-2023"
												},
												{
													"key": "stopDate",
													"value": "9-3-2023"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");",
											"const User = pm.globals.get(\"carrierMailboxAutomation\");",
											"const Pass = pm.globals.get(\"carrierMailboxAutomationPassword\");",
											"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
											"const Scope = pm.globals.get(\"allScope\")",
											"const postRequest = {",
											"  url: URL,",
											"  method: 'POST',",
											"  timeout: 10,",
											"  header: {",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
											"    \"Authorization\": \"Basic \" + BasicToken",
											"  },",
											"  body: {",
											"    mode: 'urlencoded',",
											"    urlencoded: [",
											"        {key: \"grant_type\", value: \"password\"},",
											"        {key:\"username\", value: User},",
											"        {key:\"Password\", value: Pass},",
											"        {key:\"scope\", value: Scope}",
											"    ]}",
											"};",
											"pm.environment.unset(\"carrierMailboxToken\");",
											"pm.sendRequest(postRequest, function (err, res) {",
											"    var responseJson = res.json();",
											"    console.log(responseJson);",
											"    pm.environment.set('carrierMailboxToken', responseJson['access_token']);",
											"});"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "One Param",
							"item": [
								{
									"name": "Get 200 ok Status code- Received or R",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&statusCode=R",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "R"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204 Class Code not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{onefile}}&classCode=CLMDWN",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{onefile}}"
												},
												{
													"key": "classCode",
													"value": "CLMDWN"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Start date 204 for date after files",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&startDate=11-14-2023",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "startDate",
													"value": "11-14-2023"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Hold or H",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&statusCode=H",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "H"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok Stop date- file returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierV3Mailbox}}&stopDate=05-1-2023",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierV3Mailbox}}"
												},
												{
													"key": "stopDate",
													"value": "05-1-2023"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Send or S",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{carrierMailboxToken}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierV3Mailbox}}&statusCode=S&page=1",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierV3Mailbox}}"
												},
												{
													"key": "statusCode",
													"value": "S"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Start date 200- files returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&startDate=11-10-2022",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "startDate",
													"value": "11-10-2022"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200OK class code- file returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierV3Mailbox}}&classCode=AIDOWN",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierV3Mailbox}}"
												},
												{
													"key": "classCode",
													"value": "AIDOWN"
												},
												{
													"key": "pageSize",
													"value": "1",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204 ok for fake status code",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&statusCode=random%C2%A7%CE%A6",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "random%C2%A7%CE%A6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Auto -acknowledged or T",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&statusCode=T",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "T"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204ok direction -Outbond",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierV3Mailbox}}&direction=outbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierV3Mailbox}}"
												},
												{
													"key": "direction",
													"value": "outbound"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Canceled or C",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?statusCode=C&account={{carrierAccount}}&userId={{carrierMailbox}}",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "statusCode",
													"value": "C"
												},
												{
													"key": null,
													"value": "1f70e807-22a0-4084-bf51-742b7e162226",
													"disabled": true
												},
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 filterAccount",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&filterAccount={{agencyAccount}}",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "filterAccount",
													"value": "{{agencyAccount}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok direction -Inbond returns file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    pm.test(\"response size is not eaqual to null\", function () {\r",
													"    pm.expect(pm.response.responseSize).not.eq(0);\r",
													"});\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&direction=inbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "direction",
													"value": "inbound"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Available or V",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&statusCode=V",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "V"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 filterUserId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&filterUserId={{agencyMailbox}}",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "filterUserId",
													"value": "{{agencyMailbox}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get stop date 204 for date before files",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierMailboxToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&stopDate=05-1-2001",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "stopDate",
													"value": "05-1-2001"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");",
											"const User = pm.globals.get(\"carrierMailboxAutomation\");",
											"const Pass = pm.globals.get(\"carrierMailboxAutomationPassword\");",
											"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
											"const Scope = pm.globals.get(\"allScope\")",
											"const postRequest = {",
											"  url: URL,",
											"  method: 'POST',",
											"  timeout: 10,",
											"  header: {",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
											"    \"Authorization\": \"Basic \" + BasicToken",
											"  },",
											"  body: {",
											"    mode: 'urlencoded',",
											"    urlencoded: [",
											"        {key: \"grant_type\", value: \"password\"},",
											"        {key:\"username\", value: User},",
											"        {key:\"Password\", value: Pass},",
											"        {key:\"scope\", value: Scope}",
											"    ]}",
											"};",
											"pm.environment.unset(\"carrierMailboxToken\");",
											"pm.sendRequest(postRequest, function (err, res) {",
											"    var responseJson = res.json();",
											"    console.log(responseJson);",
											"    pm.environment.set('carrierMailboxToken', responseJson['access_token']);",
											"});"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Get 400 returns Bad Request due to empty pagesize int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account=null&userId=null&pagesize=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "null"
										},
										{
											"key": "userId",
											"value": "null"
										},
										{
											"key": "pagesize",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 204Ok returns No content due to no files",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{emptyAgencyMailbox}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{carrierAccount}}"
										},
										{
											"key": "userId",
											"value": "{{emptyAgencyMailbox}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get  400 returns Bad Request due to empty page int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account=&userId=&page=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": ""
										},
										{
											"key": "userId",
											"value": ""
										},
										{
											"key": "page",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 401 returns Unauthorized for agency mailbox",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierMailboxToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account=yduxh&userId=yx66xu6",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "yduxh"
										},
										{
											"key": "userId",
											"value": "yx66xu6"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"carrierMailboxAutomation\");",
									"const Pass = pm.globals.get(\"carrierMailboxAutomationPassword\");",
									"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
									"const Scope = pm.globals.get(\"allScopes\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"carrierMailboxToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('carrierMailboxToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Carrier System User",
			"item": [
				{
					"name": "File Contents",
					"item": [
						{
							"name": "Get 200OK for File Contents",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fileIDwithitems}}/items"
							},
							"response": []
						},
						{
							"name": "Get 200OK for File index one",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fileIDwithitems}}/items/01"
							},
							"response": []
						},
						{
							"name": "Get 204OK for Empty Zip file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{emptyZipfile}}/items"
							},
							"response": []
						},
						{
							"name": "Get 401 for file on another account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{unAuthorizedFile}}/items"
							},
							"response": []
						},
						{
							"name": "Get 401 for fake ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fakeFileID}}/items"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"carrierSysUser\");",
									"const Pass = pm.globals.get(\"carrierPassword\");",
									"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"carrierSysUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('carrierSysUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "FIles Get by ID",
					"item": [
						{
							"name": "Get 400 returns Bad Request dur to Invalid for decompressFile Boolean",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files/{{fileIDwithitems}}?decompressFile=1",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files",
										"{{fileIDwithitems}}"
									],
									"query": [
										{
											"key": "decompressFile",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 404  returns Not Found due to non-existent id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{wrongFileId}}"
							},
							"response": []
						},
						{
							"name": "Get 401 returns unauthoried for carrier",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{unAuthorizedFile}}"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"carrierSysUser\");",
									"const Pass = pm.globals.get(\"carrierPassword\");",
									"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"carrierSysUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('carrierSysUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "File Get Matadata by Id",
					"item": [
						{
							"name": "Get 200OK -return edoc metadata",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{edocFileid}}/metadata"
							},
							"response": []
						},
						{
							"name": "return 200 Ok with any account and any UserId for a non-empty \"inbox\" Mailbox",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200 OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    // pm.expect(jsonData).to.have.property()\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");\r",
											"const User = pm.globals.get(\"agencyAdmin\");\r",
											"const Pass = pm.globals.get(\"agencyPassword\");\r",
											"const BasicToken = pm.environment.get(\"agencyTokenClient\");\r",
											"const Scope = pm.globals.get(\"allScopes\")\r",
											"const postRequest = {\r",
											"  url: URL,\r",
											"  method: 'POST',\r",
											"  timeout: 10,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",\r",
											"    \"Authorization\": \"Basic \" + BasicToken\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: User},\r",
											"        {key:\"Password\", value: Pass},\r",
											"        {key:\"scope\", value: Scope}\r",
											"    ]}\r",
											"};\r",
											"pm.environment.unset(\"agencyAdminToken\");\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('agencyAdminToken', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencyAdminToken}}"
									},
									{
										"key": "pageSize",
										"value": "1",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{agencyAccount}}"
										},
										{
											"key": "userId",
											"value": "{{agencyMailbox}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "return 204 No Content with any account and UserId with Empty Inbox",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account={{carrierAccount}}&userId={{carrierEmptymailbox}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "leadRoute",
											"value": "",
											"disabled": true
										},
										{
											"key": "account",
											"value": "{{carrierAccount}}"
										},
										{
											"key": "userId",
											"value": "{{carrierEmptymailbox}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "return 200 Ok with any account and any UserId with Status code received",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200 OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    // var jsonData = JSON.parse(responseBody);\r",
											"    //pm.expect(jsonData).to.have.property()\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account={{carrierAccount}}&userId={{carrierMailbox}}&statuscode=received",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{carrierAccount}}"
										},
										{
											"key": "userId",
											"value": "{{carrierMailbox}}"
										},
										{
											"key": "statuscode",
											"value": "received"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "return 200 Ok with any account and any UserId with pagesize = 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200 OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    // var jsonData = JSON.parse(responseBody);\r",
											"    // pm.expect(jsonData).to.have.length(25)\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "pageSize",
											"value": "1",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{reqUrl}}/api/files?account={{carrierAccount}}&userId={{carrierMailbox}}&pageSize=1",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{carrierAccount}}"
										},
										{
											"key": "userId",
											"value": "{{carrierMailbox}}"
										},
										{
											"key": "pageSize",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "return 401 Unauthorized with Non Existing account and UserId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account={{wrongAccount}}&userId={{wrongUserID}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{wrongAccount}}"
										},
										{
											"key": "userId",
											"value": "{{wrongUserID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "return 401 Unauthorized with any account and UserId I don't have access",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account={{carrierAcoountNoAccess}}&userId={{carrierMailboxNoAcess}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{carrierAcoountNoAccess}}"
										},
										{
											"key": "userId",
											"value": "{{carrierMailboxNoAcess}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "return 404 Not Found without Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"\r",
											"    const REQURL = pm.environment.get(\"reqUrl\")\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    pm.expect(jsonData).to.have.property(\"message\", \"No HTTP resource was found that matches the request URI '\" + REQURL + \"/api/files'.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "",
											"disabled": true
										},
										{
											"key": "userId",
											"value": "${userId}",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "return 404 Not Found without UserId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"    \r",
											"    const REQURL = pm.environment.get(\"reqUrl\")\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    pm.expect(jsonData).to.have.property(\"message\", \"No HTTP resource was found that matches the request URI '\" + REQURL + \"/api/files'.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "",
											"disabled": true
										},
										{
											"key": "userId",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "return 400 Bad Request with Empty account and Non-Empty User Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    pm.expect(jsonData).to.have.property(\"message\", \"The request is invalid.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account=&userId={{carrierMailbox}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": ""
										},
										{
											"key": "userId",
											"value": "{{carrierMailbox}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "return 400 Bad Request with Non-Empty account and Empty User Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    pm.expect(jsonData).to.have.property(\"message\", \"The request is invalid.\");\r",
											"    //pm.expect(jsonData.modelState).to.have.property(\"userId.String\", [\"A value is required but was not present in the request.\"]);\r",
											"}); "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account={{carrierAccount}}&userId=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{carrierAccount}}"
										},
										{
											"key": "userId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "return 400 Bad Request with Empty account and Empty User Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    pm.expect(jsonData).to.have.property(\"message\", \"The request is invalid.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account=&userId=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": ""
										},
										{
											"key": "userId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 404 for fake ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fakeFileID}}/metadata"
							},
							"response": []
						},
						{
							"name": "Get 200Ok return Zip file Metadata",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{zipFileId}}/metadata"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"carrierSysUser\");",
									"const Pass = pm.globals.get(\"carrierPassword\");",
									"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"carrierSysUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('carrierSysUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "GET History by File ID",
					"item": [
						{
							"name": "Get 200Ok edoc file History",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{edocFileid}}/history"
							},
							"response": []
						},
						{
							"name": "Get 200Ok  Returns Zip file history",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{zipFileId}}/history"
							},
							"response": []
						},
						{
							"name": "Get 200 Ok with History Of File using Valid File ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200 OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{carrierfileId}}/history"
							},
							"response": []
						},
						{
							"name": "Get 401  returns Unauthorized on other account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysuserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{YDUXHFileID}}/history"
							},
							"response": []
						},
						{
							"name": "return 404 using Invalid File ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"\r",
											"    //var jsonData = JSON.parse(responseBody);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{wrongFileId}}/history"
							},
							"response": []
						},
						{
							"name": "return 400 using Empty File ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": "{{reqUrl}}/api/files/ /history"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"carrierSysUser\");",
									"const Pass = pm.globals.get(\"carrierPassword\");",
									"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"carrierSysUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('carrierSysUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "File Put Status ( Please run in sequence )",
					"item": [
						{
							"name": "Get 200ok for Status to Send",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"status\":\"S\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{reqUrl}}/api/files/{{changeFileStatus}}/status"
							},
							"response": []
						},
						{
							"name": "Put 200 return 200 for sucessfull file Sent for Receive",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");\r",
											"const User = pm.globals.get(\"agencySysUser\");\r",
											"const Pass = pm.globals.get(\"agencyPassword\");\r",
											"const BasicToken = pm.environment.get(\"agencyTokenClient\");\r",
											"const Scope = pm.globals.get(\"allScope\")\r",
											"const postRequest = {\r",
											"  url: URL,\r",
											"  method: 'POST',\r",
											"  timeout: 10,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",\r",
											"    \"Authorization\": \"Basic \" + BasicToken\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: User},\r",
											"        {key:\"Password\", value: Pass},\r",
											"        {key:\"scope\", value: Scope}\r",
											"    ]}\r",
											"};\r",
											"pm.environment.unset(\"agencySysUserToken\");\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('agencySysUserToken', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{changeFileStatus}}/received"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"carrierSysUser\");",
									"const Pass = pm.globals.get(\"carrierPassword\");",
									"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"carrierSysUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('carrierSysUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files Metadata",
					"item": [
						{
							"name": "Get 400 return bad request  to empty class code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account=null&userId=null&classcode=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "null"
										},
										{
											"key": "userId",
											"value": "null"
										},
										{
											"key": "classcode",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get  400 returns Bad Request due to empty page int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account=null&userId=null&page=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "null"
										},
										{
											"key": "userId",
											"value": "null"
										},
										{
											"key": "page",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 400 returns Bad Request due to empty pagesize int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account=null&userId=null&pagesize=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "null"
										},
										{
											"key": "userId",
											"value": "null"
										},
										{
											"key": "pagesize",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 500 returns API Error dur to invalid status code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account={{carrierAccount}}&userId={{carrierEmptyMailbox}}&statuscode=asdf!@#gh",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{carrierAccount}}"
										},
										{
											"key": "userId",
											"value": "{{carrierEmptyMailbox}}"
										},
										{
											"key": "statuscode",
											"value": "asdf!@"
										}
									],
									"hash": "gh"
								}
							},
							"response": []
						},
						{
							"name": "Get 204Ok returns No content due to no files",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account={{carrierAccount}}&userId={{carrierEmptymailbox}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{carrierAccount}}"
										},
										{
											"key": "userId",
											"value": "{{carrierEmptymailbox}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"carrierSysUser\");",
									"const Pass = pm.globals.get(\"carrierPassword\");",
									"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"carrierSysUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('carrierSysUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files V3 Metadata",
					"item": [
						{
							"name": "Two Params",
							"item": [
								{
									"name": "Get 200ok Two Status Codes",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierV3Mailbox}}&statusCode=T&statusCode=X",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierV3Mailbox}}"
												},
												{
													"key": "statusCode",
													"value": "T"
												},
												{
													"key": "statusCode",
													"value": "X"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get start and stop date-  return 400 for bad dates",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&startDate=2019-06-01&stopDate=2018-06-01",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "startDate",
													"value": "2019-06-01"
												},
												{
													"key": "stopDate",
													"value": "2018-06-01"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200OK Start and Stop date- file returns",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&startDate=1-1-2023&stopDate=9-03-2023",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "startDate",
													"value": "1-1-2023"
												},
												{
													"key": "stopDate",
													"value": "9-03-2023"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204 Status code -Canceled or C & direction inbound",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&statusCode=C&direction=inbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "C"
												},
												{
													"key": "direction",
													"value": "inbound"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");",
											"const User = pm.globals.get(\"carrierSysUser\");",
											"const Pass = pm.globals.get(\"carrierPassword\");",
											"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
											"const Scope = pm.globals.get(\"allScope\")",
											"const postRequest = {",
											"  url: URL,",
											"  method: 'POST',",
											"  timeout: 10,",
											"  header: {",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
											"    \"Authorization\": \"Basic \" + BasicToken",
											"  },",
											"  body: {",
											"    mode: 'urlencoded',",
											"    urlencoded: [",
											"        {key: \"grant_type\", value: \"password\"},",
											"        {key:\"username\", value: User},",
											"        {key:\"Password\", value: Pass},",
											"        {key:\"scope\", value: Scope}",
											"    ]}",
											"};",
											"pm.environment.unset(\"carrierSysUserToken\");",
											"pm.sendRequest(postRequest, function (err, res) {",
											"    var responseJson = res.json();",
											"    console.log(responseJson);",
											"    pm.environment.set('carrierSysUserToken', responseJson['access_token']);",
											"});"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "One Param",
							"item": [
								{
									"name": "Get 200 ok Status code- Canceled or C",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?statusCode=C&account={{carrierAccount}}&userId={{carrierMailbox}}",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "statusCode",
													"value": "C"
												},
												{
													"key": null,
													"value": "1f70e807-22a0-4084-bf51-742b7e162226",
													"disabled": true
												},
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204 ok for fake status code",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&statusCode=random%C2%A7%CE%A6",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "random%C2%A7%CE%A6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Available or V",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&statusCode=V",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "V"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 filterAccount",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&filterAccount={{agencyAccount}}",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "filterAccount",
													"value": "{{agencyAccount}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok Stop date- file returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierV3Mailbox}}&stopDate=05-1-2023",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierV3Mailbox}}"
												},
												{
													"key": "stopDate",
													"value": "05-1-2023"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Start date 204 for date after files",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&startDate=11-14-2023",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "startDate",
													"value": "11-14-2023"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Start date 200- files returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&startDate=11-10-2022",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "startDate",
													"value": "11-10-2022"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 filterUserId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&filterUserId={{agencyMailbox}}",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "filterUserId",
													"value": "{{agencyMailbox}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get stop date 204 for date before files",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&stopDate=05-1-2001",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "stopDate",
													"value": "05-1-2001"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Send or S",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierV3Mailbox}}&statusCode=S",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierV3Mailbox}}"
												},
												{
													"key": "statusCode",
													"value": "S"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Auto -acknowledged or T",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&statusCode=T",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "T"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200OK class code- file returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierV3Mailbox}}&classCode=AIDOWN",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierV3Mailbox}}"
												},
												{
													"key": "classCode",
													"value": "AIDOWN"
												},
												{
													"key": "pageSize",
													"value": "1",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok direction -Inbond returns file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    pm.test(\"response size is not eaqual to null\", function () {\r",
													"    pm.expect(pm.response.responseSize).not.eq(0);\r",
													"});\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&direction=inbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "direction",
													"value": "inbound"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok direction -Outbond",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierV3Mailbox}}&direction=outbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierV3Mailbox}}"
												},
												{
													"key": "direction",
													"value": "outbound"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Hold or H",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&statusCode=H",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "H"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204 Class Code not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&classCode=CLMDWN\"",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "classCode",
													"value": "CLMDWN\""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Received or R",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&statusCode=R",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "R"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");",
											"const User = pm.globals.get(\"carrierSysUser\");",
											"const Pass = pm.globals.get(\"carrierPassword\");",
											"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
											"const Scope = pm.globals.get(\"allScope\")",
											"const postRequest = {",
											"  url: URL,",
											"  method: 'POST',",
											"  timeout: 10,",
											"  header: {",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
											"    \"Authorization\": \"Basic \" + BasicToken",
											"  },",
											"  body: {",
											"    mode: 'urlencoded',",
											"    urlencoded: [",
											"        {key: \"grant_type\", value: \"password\"},",
											"        {key:\"username\", value: User},",
											"        {key:\"Password\", value: Pass},",
											"        {key:\"scope\", value: Scope}",
											"    ]}",
											"};",
											"pm.environment.unset(\"carrierSysUserToken\");",
											"pm.sendRequest(postRequest, function (err, res) {",
											"    var responseJson = res.json();",
											"    console.log(responseJson);",
											"    pm.environment.set('carrierSysUserToken', responseJson['access_token']);",
											"});"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Get 400 returns Bad Request due to empty pagesize int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account=null&userId=null&pagesize=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "null"
										},
										{
											"key": "userId",
											"value": "null"
										},
										{
											"key": "pagesize",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 401 returns Unauthorized for agency mailbox",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account=yduxh&userId=yx66xu6",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "yduxh"
										},
										{
											"key": "userId",
											"value": "yx66xu6"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get  400 returns Bad Request due to empty page int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account=&userId=&page=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": ""
										},
										{
											"key": "userId",
											"value": ""
										},
										{
											"key": "page",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 204Ok returns No content due to no files",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierEmptymailbox}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{carrierAccount}}"
										},
										{
											"key": "userId",
											"value": "{{carrierEmptymailbox}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"carrierSysUser\");",
									"const Pass = pm.globals.get(\"carrierPassword\");",
									"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"carrierSysUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('carrierSysUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Carrier User",
			"item": [
				{
					"name": "File Contents",
					"item": [
						{
							"name": "Get 200OK for File Contents",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fileIDwithitems}}/items"
							},
							"response": []
						},
						{
							"name": "Get 204OK for Empty Zip file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{emptyZipfile}}/items"
							},
							"response": []
						},
						{
							"name": "Get 401 for fake ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fakeFileID}}/items"
							},
							"response": []
						},
						{
							"name": "Get 401 for file on another account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{unAuthorizedFile}}/items"
							},
							"response": []
						},
						{
							"name": "Get 200OK for File index one",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fileIDwithitems}}/items/01"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"carrierUser\");",
									"const Pass = pm.globals.get(\"carrierPassword\");",
									"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"carrierUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('carrierUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "File Get Matadata by Id",
					"item": [
						{
							"name": "Get 404 for fake ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fakeFileID}}/metadata"
							},
							"response": []
						},
						{
							"name": "Get 200OK -return edoc metadata",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{edocFileid}}/metadata"
							},
							"response": []
						},
						{
							"name": "GET 401 returns unauyhorized for files on other account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files/{{unAuthorizedFile}}/metadata",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files",
										"{{unAuthorizedFile}}",
										"metadata"
									],
									"query": [
										{
											"key": "leadRoute",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 200Ok return Zip file Metadata",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{zipFileId}}/metadata"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"carrierUser\");",
									"const Pass = pm.globals.get(\"carrierPassword\");",
									"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"carrierUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('carrierUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "GET History by File ID",
					"item": [
						{
							"name": "Get 200Ok edoc file History",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{edocFileid}}/history"
							},
							"response": []
						},
						{
							"name": "Get 200Ok  Returns Zip file history",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{zipFileId}}/history"
							},
							"response": []
						},
						{
							"name": "Get 200 Ok with History Of File using Valid File ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200 OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{carrierfileId}}/history"
							},
							"response": []
						},
						{
							"name": "Get 401  returns Unauthorized on other account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysuserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{unAuthorizedFile}}/history"
							},
							"response": []
						},
						{
							"name": "return 404 using Invalid File ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"\r",
											"    //var jsonData = JSON.parse(responseBody);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{wrongFileId}}/history"
							},
							"response": []
						},
						{
							"name": "return 400 using Empty File ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierSysUserToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": "{{reqUrl}}/api/files/ /history"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"carrierUser\");",
									"const Pass = pm.globals.get(\"carrierPassword\");",
									"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"carrierUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('carrierUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files Metadata",
					"item": [
						{
							"name": "Get 401 return 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account={{carrierAccount}}&userId={{carrierMailbox}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{carrierAccount}}"
										},
										{
											"key": "userId",
											"value": "{{carrierMailbox}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"carrierUser\");",
									"const Pass = pm.globals.get(\"carrierPassword\");",
									"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"carrierUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('carrierUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files V3 Metadata",
					"item": [
						{
							"name": "One Param",
							"item": [
								{
									"name": "Get 200 ok Status code- Received or R",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierV3Mailbox}}&statusCode=R",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierV3Mailbox}}"
												},
												{
													"key": "statusCode",
													"value": "R"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204 Class Code not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&classCode=CLMDWN\"",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "classCode",
													"value": "CLMDWN\""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Start date 204 for date after files",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&startDate=11-14-2023",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "startDate",
													"value": "11-14-2023"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Hold or H",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&statusCode=H",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "H"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok Stop date- file returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierV3Mailbox}}&stopDate=05-1-2023",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierV3Mailbox}}"
												},
												{
													"key": "stopDate",
													"value": "05-1-2023"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Send or S",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierV3Mailbox}}&statusCode=S",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierV3Mailbox}}"
												},
												{
													"key": "statusCode",
													"value": "S"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Start date 200- files returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&startDate=11-10-2022",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "startDate",
													"value": "11-10-2022"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200OK class code- file returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierV3Mailbox}}&classCode=AIDOWN",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierV3Mailbox}}"
												},
												{
													"key": "classCode",
													"value": "AIDOWN"
												},
												{
													"key": "pageSize",
													"value": "1",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204 ok for fake status code",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&statusCode=random%C2%A7%CE%A6",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "random%C2%A7%CE%A6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Auto -acknowledged or T",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&statusCode=T",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "T"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204ok direction -Outbond",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"    \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{onefile}}&direction=outbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{onefile}}"
												},
												{
													"key": "direction",
													"value": "outbound"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Canceled or C",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?statusCode=C&account={{carrierAccount}}&userId={{carrierMailbox}}",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "statusCode",
													"value": "C"
												},
												{
													"key": null,
													"value": "1f70e807-22a0-4084-bf51-742b7e162226",
													"disabled": true
												},
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 filterAccount",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&filterAccount={{agencyAccount}}",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "filterAccount",
													"value": "{{agencyAccount}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok direction -Inbond returns file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    pm.test(\"response size is not eaqual to null\", function () {\r",
													"    pm.expect(pm.response.responseSize).not.eq(0);\r",
													"});\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&direction=inbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "direction",
													"value": "inbound"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Available or V",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&statusCode=V",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "V"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 filterUserId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&filterUserId={{agencyMailbox}}",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "filterUserId",
													"value": "{{agencyMailbox}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get stop date 204 for date before files",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&stopDate=05-1-2001",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "stopDate",
													"value": "05-1-2001"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");",
											"const User = pm.globals.get(\"carrierUser\");",
											"const Pass = pm.globals.get(\"carrierPassword\");",
											"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
											"const Scope = pm.globals.get(\"allScope\")",
											"const postRequest = {",
											"  url: URL,",
											"  method: 'POST',",
											"  timeout: 10,",
											"  header: {",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
											"    \"Authorization\": \"Basic \" + BasicToken",
											"  },",
											"  body: {",
											"    mode: 'urlencoded',",
											"    urlencoded: [",
											"        {key: \"grant_type\", value: \"password\"},",
											"        {key:\"username\", value: User},",
											"        {key:\"Password\", value: Pass},",
											"        {key:\"scope\", value: Scope}",
											"    ]}",
											"};",
											"pm.environment.unset(\"carrierUserToken\");",
											"pm.sendRequest(postRequest, function (err, res) {",
											"    var responseJson = res.json();",
											"    console.log(responseJson);",
											"    pm.environment.set('carrierUserToken', responseJson['access_token']);",
											"});"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Two Params",
							"item": [
								{
									"name": "Get start and stop date-  return 400 for bad dates",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&startDate=2019-06-01&stopDate=2018-06-01",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "startDate",
													"value": "2019-06-01"
												},
												{
													"key": "stopDate",
													"value": "2018-06-01"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200OK Start and Stop date- file returns",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&startDate=1-1-2023&stopDate=9-03-2023",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "startDate",
													"value": "1-1-2023"
												},
												{
													"key": "stopDate",
													"value": "9-03-2023"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204 Status code -Canceled or C & direction inbound",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&statusCode=C&direction=inbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "C"
												},
												{
													"key": "direction",
													"value": "inbound"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok Two Status Codes",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{carrierSysUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}&statusCode=T&statusCode=X",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "T"
												},
												{
													"key": "statusCode",
													"value": "X"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");",
											"const User = pm.globals.get(\"carrierUser\");",
											"const Pass = pm.globals.get(\"carrierPassword\");",
											"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
											"const Scope = pm.globals.get(\"allScope\")",
											"const postRequest = {",
											"  url: URL,",
											"  method: 'POST',",
											"  timeout: 10,",
											"  header: {",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
											"    \"Authorization\": \"Basic \" + BasicToken",
											"  },",
											"  body: {",
											"    mode: 'urlencoded',",
											"    urlencoded: [",
											"        {key: \"grant_type\", value: \"password\"},",
											"        {key:\"username\", value: User},",
											"        {key:\"Password\", value: Pass},",
											"        {key:\"scope\", value: Scope}",
											"    ]}",
											"};",
											"pm.environment.unset(\"carrierUserToken\");",
											"pm.sendRequest(postRequest, function (err, res) {",
											"    var responseJson = res.json();",
											"    console.log(responseJson);",
											"    pm.environment.set('carrierUserToken', responseJson['access_token']);",
											"});"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Get 204Ok returns No content due to no files",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierEmptymailbox}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{carrierAccount}}"
										},
										{
											"key": "userId",
											"value": "{{carrierEmptymailbox}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get  400 returns Bad Request due to empty page int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account=&userId=&page=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": ""
										},
										{
											"key": "userId",
											"value": ""
										},
										{
											"key": "page",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 401 returns Unauthorized for agency mailbox",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account=yduxh&userId=yx66xu6",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "yduxh"
										},
										{
											"key": "userId",
											"value": "yx66xu6"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 400 returns Bad Request due to empty pagesize int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account=null&userId=null&pagesize=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "null"
										},
										{
											"key": "userId",
											"value": "null"
										},
										{
											"key": "pagesize",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"carrierUser\");",
									"const Pass = pm.globals.get(\"carrierPassword\");",
									"const BasicToken = pm.environment.get(\"carrierTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"carrierUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('carrierUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Ivan Global Admin",
			"item": [
				{
					"name": "File Contents",
					"item": [
						{
							"name": "Get 200OK for File Content of Index one",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ivanGlobalToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fileIDwithitems}}/items/1"
							},
							"response": []
						},
						{
							"name": "Get 200OK for File Contents",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ivanGlobalToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fileIDwithitems}}/items"
							},
							"response": []
						},
						{
							"name": "Get 204 ok for empty Zip",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ivanGlobalToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{emptyZipfile}}/items/01"
							},
							"response": []
						}
					],
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"ivanGlobal\");",
									"const Pass = pm.globals.get(\"ivanPassword\");",
									"const BasicToken = pm.environment.get(\"ivanTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"      \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \"+ BasicToken,",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"ivanGlobalToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('ivanGlobalToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "GET Metadata by File ID",
					"item": [
						{
							"name": "return 404 using Invalid File ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"\r",
											"    //var jsonData = JSON.parse(responseBody);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ivanGlobalToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/ec4681dc-f288-4691-a36d-91436e611ae7/metadata"
							},
							"response": []
						},
						{
							"name": "return 200 Ok return Zip metadata",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200 OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ivanGlobalToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{zipFileId}}/metadata"
							},
							"response": []
						},
						{
							"name": "return 200 Ok with Metadata Of File using Valid File ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200 OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ivanGlobalToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{carrierfileId}}/metadata"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"ivanGlobal\");",
									"const Pass = pm.globals.get(\"ivanPassword\");",
									"const BasicToken = pm.environment.get(\"ivanTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"      \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \"+ BasicToken,",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"ivanGlobalToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('ivanGlobalToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "File History",
					"item": [
						{
							"name": "Get 200OK returns edoc file history",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ivanGlobalToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{edocFileid}}/history"
							},
							"response": []
						},
						{
							"name": "Get 404 for fake ID (worng Id)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ivanGlobalToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fakeFileId}}/history"
							},
							"response": []
						},
						{
							"name": "Get 200OK returns zip file history",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ivanGlobalToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{zipFileId}}/history"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"ivanGlobal\");",
									"const Pass = pm.globals.get(\"ivanPassword\");",
									"const BasicToken = pm.environment.get(\"ivanTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"      \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \"+ BasicToken,",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"ivanGlobalToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('ivanGlobalToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files Get by ID",
					"item": [
						{
							"name": "GET 400 returns Bad Request due to invalid type for decompressFile boolean",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ivanGlobalToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files/{{zipFileId}}?decompressFile=1",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files",
										"{{zipFileId}}"
									],
									"query": [
										{
											"key": "decompressFile",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 404 return Not Found to non-existent id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ivanGlobalToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files/{{wrongFileId}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files",
										"{{wrongFileId}}"
									],
									"query": [
										{
											"key": "decompressFile",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"ivanGlobal\");",
									"const Pass = pm.globals.get(\"ivanPassword\");",
									"const BasicToken = pm.environment.get(\"ivanTokenClient\");",
									"const Scope = pm.globals.get(\"internalScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"      \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \"+ BasicToken,",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"ivanGlobalToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('ivanGlobalToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files Metadata",
					"item": [
						{
							"name": "Get 204Ok returns No content due to no files",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ivanGlobalToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account={{agencyAccount}}&userId={{agencyEmptyMailbox}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{agencyAccount}}"
										},
										{
											"key": "userId",
											"value": "{{agencyEmptyMailbox}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 500 returns API Error dur to invalid status code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ivanGlobalToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account={{ivanGlobalToken}}&userId={{IvanMailbox}}&statusCode=asdf!@#gh",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{ivanGlobalToken}}"
										},
										{
											"key": "userId",
											"value": "{{IvanMailbox}}"
										},
										{
											"key": "statusCode",
											"value": "asdf!@"
										}
									],
									"hash": "gh"
								}
							},
							"response": []
						},
						{
							"name": "Get 400 return bad request  to empty class code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ivanGlobalToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account=null&userId=null&classcode=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "null"
										},
										{
											"key": "userId",
											"value": "null"
										},
										{
											"key": "classcode",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get  400 returns Bad Request due to empty page int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ivanGlobalToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account=null&userId=null&page=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "null"
										},
										{
											"key": "userId",
											"value": "null"
										},
										{
											"key": "page",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 400 returns Bad Request due to empty pagesize int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ivanGlobalToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account=null&userId=null&pagesize=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "null"
										},
										{
											"key": "userId",
											"value": "null"
										},
										{
											"key": "pagesize",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 204 return No content due to no files",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ivanGlobalToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account={{carrierAccount}} &userId=leaveempty",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{carrierAccount}} "
										},
										{
											"key": "userId",
											"value": "leaveempty"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"ivanGlobal\");",
									"const Pass = pm.globals.get(\"ivanPassword\");",
									"const BasicToken = pm.environment.get(\"ivanTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"      \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \"+ BasicToken,",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"ivanGlobalToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('ivanGlobalToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files V2 Metadata",
					"item": [
						{
							"name": "Get 200ok V2 gets one record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.test(\"Record-Count\", function () {\r",
											"    pm.response.to.have.header(\"Record-Count\");\r",
											"});\r",
											"\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ivanGlobalToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v2/files?account={{agencyAccount}}&userId={{agencyMailbox}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v2",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{agencyAccount}}"
										},
										{
											"key": "userId",
											"value": "{{agencyMailbox}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 200ok V2 has Next and Last Headers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.test(\"Next is present\", function () {\r",
											"    pm.response.to.have.header(\"Next\");\r",
											"});\r",
											"pm.test(\"Last is present\", function () {\r",
											"    pm.response.to.have.header(\"Last\");\r",
											"});\r",
											"pm.test(\"Record-Count is present\", function () {\r",
											"    pm.response.to.have.header(\"Record-Count\");\r",
											"});\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Length is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Length\");\r",
											"});\r",
											"\r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ivanGlobalToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v2/files?account={{agencyAccount}}&userId={{agencyMailbox}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v2",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{agencyAccount}}"
										},
										{
											"key": "userId",
											"value": "{{agencyMailbox}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 200ok V2 has prev and First headers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"   \r",
											"});\r",
											"pm.test(\"Last is present\", function () {\r",
											"    pm.response.to.have.header(\"Prev\");\r",
											"});\r",
											"pm.test(\"Record-Count is present\", function () {\r",
											"    pm.response.to.have.header(\"Record-Count\");\r",
											"});\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Length is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Length\");\r",
											"});\r",
											"pm.test(\"First is present\", function () {\r",
											"    pm.response.to.have.header(\"First\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ivanGlobalToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v2/files?account={{agencyAccount}}&userId={{agencyMailbox}}&page=2",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v2",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{agencyAccount}}"
										},
										{
											"key": "userId",
											"value": "{{agencyMailbox}}"
										},
										{
											"key": "page",
											"value": "2"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"ivanGlobal\");",
									"const Pass = pm.globals.get(\"ivanPassword\");",
									"const BasicToken = pm.environment.get(\"ivanTokenClient\");",
									"const Scope = pm.globals.get(\"internalScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"      \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \"+ BasicToken,",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"ivanGlobalToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('ivanGlobalToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files V3 Metadata",
					"item": [
						{
							"name": "One Param",
							"item": [
								{
									"name": "Get 204 Class Code not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&classCode=CLMDWN\"",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "classCode",
													"value": "CLMDWN\""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200OK class code- file returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&classCode=AIDOWN",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "classCode",
													"value": "AIDOWN"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok direction -Inbond returns file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    pm.test(\"response size is not eaqual to null\", function () {\r",
													"    pm.expect(pm.response.responseSize).not.eq(0);\r",
													"});\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&direction=inbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "direction",
													"value": "inbound"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204ok direction -Outbond",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"    \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{onefile}}&direction=outbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{onefile}}"
												},
												{
													"key": "direction",
													"value": "outbound"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 filterAccount",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&filterAccount={{carrierAccount}}",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "filterAccount",
													"value": "{{carrierAccount}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 filterUserId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&filterUserId={{carrierMailbox}}",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "filterUserId",
													"value": "{{carrierMailbox}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204 ok for fake status code",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=random%C2%A7%CE%A6",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "random%C2%A7%CE%A6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Start date 204 for date after files",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&startDate=11-14-2023",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "startDate",
													"value": "11-14-2023"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get stop date 204 for date before files",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&stopDate=05-1-2001",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "stopDate",
													"value": "05-1-2001"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok Stop date- file returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&stopDate=05-1-2022",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "stopDate",
													"value": "05-1-2022"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Start date 200- files returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&startDate=11-10-2022",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "startDate",
													"value": "11-10-2022"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Acknowledged or A",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=A",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Auto -acknowledged or T",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=T",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "T"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Available or V",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{yduxhAccount}}&userId={{yduxhMailbox}}&statusCode=V",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{yduxhAccount}}"
												},
												{
													"key": "userId",
													"value": "{{yduxhMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "V"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Canceled or C",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?statusCode=C&account={{yduxhAccount}}&userId={{yduxhMailbox}}",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "statusCode",
													"value": "C"
												},
												{
													"key": null,
													"value": "1f70e807-22a0-4084-bf51-742b7e162226",
													"disabled": true
												},
												{
													"key": "account",
													"value": "{{yduxhAccount}}"
												},
												{
													"key": "userId",
													"value": "{{yduxhMailbox}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Hold or H",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=H",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "H"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Incomplete or I",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{yduxhAccount}}&userId={{yduxhMailbox}}&statusCode=I",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{yduxhAccount}}"
												},
												{
													"key": "userId",
													"value": "{{yduxhMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "I"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Purged or X",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{yduxhAccount}}&userId={{yduxhMailbox}}&statusCode=X",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{yduxhAccount}}"
												},
												{
													"key": "userId",
													"value": "{{yduxhMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "X"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Received or R",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{yduxhAccount}}&userId={{yduxhMailbox}}&statusCode=R",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{yduxhAccount}}"
												},
												{
													"key": "userId",
													"value": "{{yduxhMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "R"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Send or S",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierV3Mailbox}}&statusCode=S",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{carrierAccount}}"
												},
												{
													"key": "userId",
													"value": "{{carrierV3Mailbox}}"
												},
												{
													"key": "statusCode",
													"value": "S"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");",
											"const User = pm.globals.get(\"ivanGlobal\");",
											"const Pass = pm.globals.get(\"ivanPassword\");",
											"const BasicToken = pm.environment.get(\"ivanTokenClient\");",
											"const Scope = pm.globals.get(\"internalScope\")",
											"const postRequest = {",
											"  url: URL,",
											"  method: 'POST',",
											"  timeout: 10,",
											"  header: {",
											"      \"Content-Type\": \"application/x-www-raw-urlencoded\",",
											"    \"Authorization\": \"Basic \"+ BasicToken,",
											"  },",
											"  body: {",
											"    mode: 'urlencoded',",
											"    urlencoded: [",
											"        {key: \"grant_type\", value: \"password\"},",
											"        {key:\"username\", value: User},",
											"        {key:\"Password\", value: Pass},",
											"        {key:\"scope\", value: Scope}",
											"    ]}",
											"};",
											"pm.environment.unset(\"ivanGlobalToken\");",
											"pm.sendRequest(postRequest, function (err, res) {",
											"    var responseJson = res.json();",
											"    console.log(responseJson);",
											"    pm.environment.set('ivanGlobalToken', responseJson['access_token']);",
											"});"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Two Params",
							"item": [
								{
									"name": "Get 204 Status code -Canceled or C & direction inbound",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=C&direction=inbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "C"
												},
												{
													"key": "direction",
													"value": "inbound"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get start and stop date-  return 400 for bad dates",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&startDate=2019-06-01&stopDate=2018-06-01",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "startDate",
													"value": "2019-06-01"
												},
												{
													"key": "stopDate",
													"value": "2018-06-01"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok Two Status Codes",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=T&statusCode=X",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "T"
												},
												{
													"key": "statusCode",
													"value": "X"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200OK Start and Stop date- file returns",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ivanGlobalToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&startDate=11-1-2022&stopDate=11-11-2022",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "startDate",
													"value": "11-1-2022"
												},
												{
													"key": "stopDate",
													"value": "11-11-2022"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");",
											"const User = pm.globals.get(\"ivanGlobal\");",
											"const Pass = pm.globals.get(\"ivanPassword\");",
											"const BasicToken = pm.environment.get(\"ivanTokenClient\");",
											"const Scope = pm.globals.get(\"internalScope\")",
											"const postRequest = {",
											"  url: URL,",
											"  method: 'POST',",
											"  timeout: 10,",
											"  header: {",
											"      \"Content-Type\": \"application/x-www-raw-urlencoded\",",
											"    \"Authorization\": \"Basic \"+ BasicToken,",
											"  },",
											"  body: {",
											"    mode: 'urlencoded',",
											"    urlencoded: [",
											"        {key: \"grant_type\", value: \"password\"},",
											"        {key:\"username\", value: User},",
											"        {key:\"Password\", value: Pass},",
											"        {key:\"scope\", value: Scope}",
											"    ]}",
											"};",
											"pm.environment.unset(\"ivanGlobalToken\");",
											"pm.sendRequest(postRequest, function (err, res) {",
											"    var responseJson = res.json();",
											"    console.log(responseJson);",
											"    pm.environment.set('ivanGlobalToken', responseJson['access_token']);",
											"});"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Get 400 returns Bad Request due to empty pagesize int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ivanGlobalToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account=null&userId=null&pagesize=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "null"
										},
										{
											"key": "userId",
											"value": "null"
										},
										{
											"key": "pagesize",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 204Ok returns No content due to no files",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ivanGlobalToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyEmptyMailbox}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{agencyAccount}}"
										},
										{
											"key": "userId",
											"value": "{{agencyEmptyMailbox}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get  400 returns Bad Request due to empty page int",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ivanGlobalToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account=&userId=&page=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": ""
										},
										{
											"key": "userId",
											"value": ""
										},
										{
											"key": "page",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"ivanGlobal\");",
									"const Pass = pm.globals.get(\"ivanPassword\");",
									"const BasicToken = pm.environment.get(\"ivanTokenClient\");",
									"const Scope = pm.globals.get(\"internalScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"      \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \"+ BasicToken,",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"ivanGlobalToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('ivanGlobalToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Carrier Admin",
			"item": [
				{
					"name": "PUT status by file id",
					"item": [
						{
							"name": "GET- 200ok for Status to Send",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"status\":\"S\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{reqUrl}}/api/files/{{changeFileStatus}}/status"
							},
							"response": []
						},
						{
							"name": "GET- 404 PUT status  by file id using Invalid File ID(File Id Not Available to System)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"status\":\"S\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{reqUrl}}/api/files/{{fakeFileID}}/status"
							},
							"response": []
						},
						{
							"name": "GET- 400  PUT status to  by file id using Empty File ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierAdminToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"status\":\"S\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{reqUrl}}/api/files/ /status"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"carrierAdmin\");",
									"const Pass = pm.globals.get(\"carrierPassword\");",
									"const BasicToken = pm.environment.get(\"ivanTokenClient\");",
									"const Scope = pm.globals.get(\"internalScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"carrierAdminToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('carrierAdminToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "PUT recevied by file Id",
					"item": [
						{
							"name": "PUT- 200 return 200 for sucessfull file Sent for Receive",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");\r",
											"const User = pm.globals.get(\"agencySysUser\");\r",
											"const Pass = pm.globals.get(\"agencyPassword\");\r",
											"const BasicToken = pm.environment.get(\"agencyTokenClient\");\r",
											"const Scope = pm.globals.get(\"allScope\")\r",
											"const postRequest = {\r",
											"  url: URL,\r",
											"  method: 'POST',\r",
											"  timeout: 10,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",\r",
											"    \"Authorization\": \"Basic \" + BasicToken\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: User},\r",
											"        {key:\"Password\", value: Pass},\r",
											"        {key:\"scope\", value: Scope}\r",
											"    ]}\r",
											"};\r",
											"pm.environment.unset(\"agencySysUserToken\");\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('agencySysUserToken', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{changeFileStatus}}/received"
							},
							"response": []
						},
						{
							"name": "PUT- 400ok   File Status to Received by File ID with Valid File ID(Already in Received Status)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");\r",
											"const User = pm.globals.get(\"agencySysUser\");\r",
											"const Pass = pm.globals.get(\"agencyPassword\");\r",
											"const BasicToken = pm.environment.get(\"agencyTokenClient\");\r",
											"const Scope = pm.globals.get(\"allScope\")\r",
											"const postRequest = {\r",
											"  url: URL,\r",
											"  method: 'POST',\r",
											"  timeout: 10,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",\r",
											"    \"Authorization\": \"Basic \" + BasicToken\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: User},\r",
											"        {key:\"Password\", value: Pass},\r",
											"        {key:\"scope\", value: Scope}\r",
											"    ]}\r",
											"};\r",
											"pm.environment.unset(\"agencySysUserToken\");\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('agencySysUserToken', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{agencySysUserToken}}"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fileAlreadyinReceivedState}}/received"
							},
							"response": []
						},
						{
							"name": "PUT- 404 File Status to Received by File ID using Invalid File ID(File Id Not Available to System)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");\r",
											"const User = pm.environment.get(\"agencySysUser\");\r",
											"const Pass = pm.environment.get(\"agencySysUserPassword\");\r",
											"const BasicToken = pm.environment.get(\"agencyTokenClient\");\r",
											"const Scope = pm.environment.get(\"allScope\")\r",
											"const postRequest = {\r",
											"  url: URL,\r",
											"  method: 'POST',\r",
											"  timeout: 10,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",\r",
											"    \"Authorization\": \"Basic \" + BasicToken\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: User},\r",
											"        {key:\"Password\", value: Pass},\r",
											"        {key:\"scope\", value: Scope}\r",
											"    ]}\r",
											"};\r",
											"pm.environment.unset(\"agencySysUserToken\");\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('agencySysUserToken', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierAdminToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{wrongFileId}}/received"
							},
							"response": []
						},
						{
							"name": "PUT- 400 File Status to Received by File ID using Empty File ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");\r",
											"const User = pm.environment.get(\"agencySysUser\");\r",
											"const Pass = pm.environment.get(\"agencySysUserPassword\");\r",
											"const BasicToken = pm.environment.get(\"agencyTokenClient\");\r",
											"const Scope = pm.environment.get(\"allScope\")\r",
											"const postRequest = {\r",
											"  url: URL,\r",
											"  method: 'POST',\r",
											"  timeout: 10,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",\r",
											"    \"Authorization\": \"Basic \" + BasicToken\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: User},\r",
											"        {key:\"Password\", value: Pass},\r",
											"        {key:\"scope\", value: Scope}\r",
											"    ]}\r",
											"};\r",
											"pm.environment.unset(\"agencySysUserToken\");\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('agencySysUserToken', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{carrierAdminToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/ /received"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"carrierAdmin\");",
									"const Pass = pm.globals.get(\"carrierPassword\");",
									"const BasicToken = pm.environment.get(\"ivanTokenClient\");",
									"const Scope = pm.globals.get(\"internalScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"carrierAdminToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('carrierAdminToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Vendor User",
			"item": [
				{
					"name": "File Contents",
					"item": [
						{
							"name": "Get 200OK for File Contents",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{vendorUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fileIDwithitems}}/items"
							},
							"response": []
						},
						{
							"name": "Get 200OK for File index one",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{vendorUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fileIDwithitems}}/items/01"
							},
							"response": []
						},
						{
							"name": "Get 204OK for Empty Zip file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{vendorUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{emptyZipfile}}/items"
							},
							"response": []
						},
						{
							"name": "Get 401 for file on another account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{vendorUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/B6979C77-E069-497D-82F2-007B3AE5542F/items"
							},
							"response": []
						},
						{
							"name": "Get 401 for fake ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{vendorUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fakeFileID}}/items"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"vendorUser\");",
									"const Pass = pm.globals.get(\"vendorPassword\");",
									"const BasicToken = pm.environment.get(\"vendorTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"vendorUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('vendorUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "File Get Metadata by Id Copy",
					"item": [
						{
							"name": "Get 200OK  return edoc metadata",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{vendorUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{edocFileid}}/metadata"
							},
							"response": []
						},
						{
							"name": "Get 200OK  return Zip metadata",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{vendorUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{zipFileId}}/metadata"
							},
							"response": []
						},
						{
							"name": "Get 404 Not found fake Id (In correct ID)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{vendorUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fakeFileId}}/metadata"
							},
							"response": []
						},
						{
							"name": "Get 401 Unauthorized for file on other account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");\r",
											"const User = pm.environment.get(\"agencyAdmin\");\r",
											"const Pass = pm.environment.get(\"agencyPassword\");\r",
											"const BasicToken = pm.environment.get(\"agencyTokenClient\");\r",
											"const Scope = pm.environment.get(\"allScope\")\r",
											"const postRequest = {\r",
											"  url: URL,\r",
											"  method: 'POST',\r",
											"  timeout: 10,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",\r",
											"    \"Authorization\": \"Basic \" + BasicToken\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"password\"},\r",
											"        {key:\"username\", value: User},\r",
											"        {key:\"Password\", value: Pass},\r",
											"        {key:\"scope\", value: Scope}\r",
											"    ]}\r",
											"};\r",
											"pm.environment.unset(\"agencyAdminToken\");\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('agencyAdminToken', responseJson['access_token']);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{vendorUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{unautorizedFileID}}/metadata"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"vendorUser\");",
									"const Pass = pm.globals.get(\"vendorPassword\");",
									"const BasicToken = pm.environment.get(\"vendorTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"vendorUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('vendorUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "File History",
					"item": [
						{
							"name": "Get 404 returns for fake id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{vendorUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{fakeFileId}}/history"
							},
							"response": []
						},
						{
							"name": "Get 401 returns Unauthorized",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{vendorUserToken}}",
										"type": "text"
									}
								],
								"url": "{{reqUrl}}/api/files/{{unAuthorizedFile}}/history"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"vendorUser\");",
									"const Pass = pm.globals.get(\"vendorPassword\");",
									"const BasicToken = pm.environment.get(\"vendorTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"vendorUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('vendorUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files Metadata",
					"item": [
						{
							"name": "Get 401 Unauthoried user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{vendorUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/files?account=yduxh&userId=onefile",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "yduxh"
										},
										{
											"key": "userId",
											"value": "onefile"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"vendorUser\");",
									"const Pass = pm.globals.get(\"vendorPassword\");",
									"const BasicToken = pm.environment.get(\"vendorTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"vendorUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('vendorUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Files V3 Metadata",
					"item": [
						{
							"name": "One Param",
							"item": [
								{
									"name": "Get 204 Class Code not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&classCode=CLMDWN\"",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "classCode",
													"value": "CLMDWN\""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200OK class code- file returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&classCode=AIDOWN",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "classCode",
													"value": "AIDOWN"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok direction -Inbond returns file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    pm.test(\"response size is not eaqual to null\", function () {\r",
													"    pm.expect(pm.response.responseSize).not.eq(0);\r",
													"});\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&direction=inbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "direction",
													"value": "inbound"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204ok direction -Outbond",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"    \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{onefile}}&direction=outbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{onefile}}"
												},
												{
													"key": "direction",
													"value": "outbound"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 filterAccount",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&filterAccount={{carrierAccount}}",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "filterAccount",
													"value": "{{carrierAccount}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 filterUserId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&filterUserId={{carrierMailbox}}",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "filterUserId",
													"value": "{{carrierMailbox}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204 ok for fake status code",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=random%C2%A7%CE%A6",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "random%C2%A7%CE%A6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Start date 204 for date after files",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&startDate=11-14-2023",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "startDate",
													"value": "11-14-2023"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get stop date 204 for date before files",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&stopDate=05-1-2001",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "stopDate",
													"value": "05-1-2001"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok Stop date- file returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&stopDate=05-1-2022",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "stopDate",
													"value": "05-1-2022"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Start date 200- files returned",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&startDate=11-10-2022",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "startDate",
													"value": "11-10-2022"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Acknowledged or A",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=A",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Auto -acknowledged or T",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=T",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "T"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Available or V",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{yduxhAccount}}&userId={{yduxhMailbox}}&statusCode=V",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{yduxhAccount}}"
												},
												{
													"key": "userId",
													"value": "{{yduxhMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "V"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Canceled or C",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?statusCode=C&account={{yduxhAccount}}&userId={{yduxhMailbox}}",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "statusCode",
													"value": "C"
												},
												{
													"key": null,
													"value": "1f70e807-22a0-4084-bf51-742b7e162226",
													"disabled": true
												},
												{
													"key": "account",
													"value": "{{yduxhAccount}}"
												},
												{
													"key": "userId",
													"value": "{{yduxhMailbox}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Hold or H",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=H",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "H"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Incomplete or I",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{yduxhAccount}}&userId={{yduxhMailbox}}&statusCode=I",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{yduxhAccount}}"
												},
												{
													"key": "userId",
													"value": "{{yduxhMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "I"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Purged or X",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{yduxhAccount}}&userId={{yduxhMailbox}}&statusCode=X",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{yduxhAccount}}"
												},
												{
													"key": "userId",
													"value": "{{yduxhMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "X"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Received or R",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{yduxhAccount}}&userId={{yduxhMailbox}}&statusCode=R",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{yduxhAccount}}"
												},
												{
													"key": "userId",
													"value": "{{yduxhMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "R"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200 ok Status code- Send or S",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=S",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "S"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");",
											"const User = pm.globals.get(\"vendorUser\");",
											"const Pass = pm.globals.get(\"vendorPassword\");",
											"const BasicToken = pm.environment.get(\"vendorTokenClient\");",
											"const Scope = pm.globals.get(\"allScope\")",
											"const postRequest = {",
											"  url: URL,",
											"  method: 'POST',",
											"  timeout: 10,",
											"  header: {",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
											"    \"Authorization\": \"Basic \" + BasicToken",
											"  },",
											"  body: {",
											"    mode: 'urlencoded',",
											"    urlencoded: [",
											"        {key: \"grant_type\", value: \"password\"},",
											"        {key:\"username\", value: User},",
											"        {key:\"Password\", value: Pass},",
											"        {key:\"scope\", value: Scope}",
											"    ]}",
											"};",
											"pm.environment.unset(\"vendorUserToken\");",
											"pm.sendRequest(postRequest, function (err, res) {",
											"    var responseJson = res.json();",
											"    console.log(responseJson);",
											"    pm.environment.set('vendorUserToken', responseJson['access_token']);",
											"});"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Two Params",
							"item": [
								{
									"name": "Get 200OK Start and Stop date- file returns",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&startDate=11-1-2022&stopDate=11-11-2022",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "startDate",
													"value": "11-1-2022"
												},
												{
													"key": "stopDate",
													"value": "11-11-2022"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get start and stop date-  return 400 for bad dates",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&startDate=2019-06-01&stopDate=2018-06-01",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "startDate",
													"value": "2019-06-01"
												},
												{
													"key": "stopDate",
													"value": "2018-06-01"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 204 Status code -Canceled or C & direction inbound",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=C&direction=inbound",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "C"
												},
												{
													"key": "direction",
													"value": "inbound"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get 200ok Two Status Codes",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{vendorUserToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyMailbox}}&statusCode=T&statusCode=X",
											"host": [
												"{{reqUrl}}"
											],
											"path": [
												"api",
												"v3",
												"files"
											],
											"query": [
												{
													"key": "account",
													"value": "{{agencyAccount}}"
												},
												{
													"key": "userId",
													"value": "{{agencyMailbox}}"
												},
												{
													"key": "statusCode",
													"value": "T"
												},
												{
													"key": "statusCode",
													"value": "X"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"const URL = pm.environment.get(\"tokenUrl\");",
											"const User = pm.globals.get(\"vendorUser\");",
											"const Pass = pm.globals.get(\"vendorPassword\");",
											"const BasicToken = pm.environment.get(\"vendorTokenClient\");",
											"const Scope = pm.globals.get(\"allScope\")",
											"const postRequest = {",
											"  url: URL,",
											"  method: 'POST',",
											"  timeout: 10,",
											"  header: {",
											"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
											"    \"Authorization\": \"Basic \" + BasicToken",
											"  },",
											"  body: {",
											"    mode: 'urlencoded',",
											"    urlencoded: [",
											"        {key: \"grant_type\", value: \"password\"},",
											"        {key:\"username\", value: User},",
											"        {key:\"Password\", value: Pass},",
											"        {key:\"scope\", value: Scope}",
											"    ]}",
											"};",
											"pm.environment.unset(\"vendorUserToken\");",
											"pm.sendRequest(postRequest, function (err, res) {",
											"    var responseJson = res.json();",
											"    console.log(responseJson);",
											"    pm.environment.set('vendorUserToken', responseJson['access_token']);",
											"});"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Get 400 returns Bad Request due to empty pagesize int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{vendorUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account=null&userId=null&pagesize=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "null"
										},
										{
											"key": "userId",
											"value": "null"
										},
										{
											"key": "pagesize",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 401 returns Unauthorized for carrier mailbox",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{vendorUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account={{carrierAccount}}&userId={{carrierMailbox}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{carrierAccount}}"
										},
										{
											"key": "userId",
											"value": "{{carrierMailbox}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 204Ok returns No content due to no files",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{vendorUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account={{agencyAccount}}&userId={{agencyEmptymailbox}}",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": "{{agencyAccount}}"
										},
										{
											"key": "userId",
											"value": "{{agencyEmptymailbox}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get  400 returns Bad Request due to empty page int",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{vendorUserToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{reqUrl}}/api/v3/files?account=&userId=&page=",
									"host": [
										"{{reqUrl}}"
									],
									"path": [
										"api",
										"v3",
										"files"
									],
									"query": [
										{
											"key": "account",
											"value": ""
										},
										{
											"key": "userId",
											"value": ""
										},
										{
											"key": "page",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const URL = pm.environment.get(\"tokenUrl\");",
									"const User = pm.globals.get(\"vendorUser\");",
									"const Pass = pm.globals.get(\"vendorPassword\");",
									"const BasicToken = pm.environment.get(\"vendorTokenClient\");",
									"const Scope = pm.globals.get(\"allScope\")",
									"const postRequest = {",
									"  url: URL,",
									"  method: 'POST',",
									"  timeout: 10,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-raw-urlencoded\",",
									"    \"Authorization\": \"Basic \" + BasicToken",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"password\"},",
									"        {key:\"username\", value: User},",
									"        {key:\"Password\", value: Pass},",
									"        {key:\"scope\", value: Scope}",
									"    ]}",
									"};",
									"pm.environment.unset(\"vendorUserToken\");",
									"pm.sendRequest(postRequest, function (err, res) {",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('vendorUserToken', responseJson['access_token']);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "fakeFileId",
			"value": "00000ABC-1111-2222-3333-121231231231",
			"type": "string"
		},
		{
			"key": "carrierMailbox",
			"value": ""
		}
	]
}